<?php

declare (strict_types=1);
namespace ApiClients\Client\GitHub\Schema\Apps\ScopeToken\Request;

use ApiClients\Client\GitHub\Error as ErrorSchemas;
use ApiClients\Client\GitHub\Hydrator;
use ApiClients\Client\GitHub\Operation;
use ApiClients\Client\GitHub\Schema;
use ApiClients\Client\GitHub\WebHook;
final readonly class Applicationjson
{
    public const SCHEMA_JSON = '{"required":["access_token"],"type":"object","properties":{"access_token":{"type":"string","description":"The access token used to authenticate to the GitHub API.","examples":["e72e16c7e42f292c6912e7710c838347ae178b4a"]},"target":{"type":"string","description":"The name of the user or organization to scope the user-to-server access token to. **Required** unless `target_id` is specified.","examples":["octocat"]},"target_id":{"type":"integer","description":"The ID of the user or organization to scope the user-to-server access token to. **Required** unless `target` is specified.","examples":[1]},"repositories":{"type":"array","items":{"type":"string","examples":["rails"]},"description":"The list of repository names to scope the user-to-server access token to. `repositories` may not be specified if `repository_ids` is specified."},"repository_ids":{"type":"array","items":{"type":"integer"},"description":"The list of repository IDs to scope the user-to-server access token to. `repository_ids` may not be specified if `repositories` is specified.","examples":[1]},"permissions":{"title":"App Permissions","type":"object","properties":{"actions":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts."},"administration":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation."},"checks":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token for checks on code."},"contents":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges."},"deployments":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token for deployments and deployment statuses."},"environments":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token for managing repository environments."},"issues":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones."},"metadata":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata."},"packages":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token for packages published to GitHub Packages."},"pages":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds."},"pull_requests":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges."},"repository_announcement_banners":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token to view and manage announcement banners for a repository."},"repository_hooks":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token to manage the post-receive hooks for a repository."},"repository_projects":{"enum":["read","write","admin"],"type":"string","description":"The level of permission to grant the access token to manage repository projects, columns, and cards."},"secret_scanning_alerts":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token to view and manage secret scanning alerts."},"secrets":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token to manage repository secrets."},"security_events":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token to view and manage security events like code scanning alerts."},"single_file":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token to manage just a single file."},"statuses":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token for commit statuses."},"vulnerability_alerts":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token to manage Dependabot alerts."},"workflows":{"enum":["write"],"type":"string","description":"The level of permission to grant the access token to update GitHub Actions workflow files."},"members":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token for organization teams and members."},"organization_administration":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token to manage access to an organization."},"organization_custom_roles":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token for custom repository roles management. This property is in beta and is subject to change."},"organization_announcement_banners":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token to view and manage announcement banners for an organization."},"organization_hooks":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token to manage the post-receive hooks for an organization."},"organization_plan":{"enum":["read"],"type":"string","description":"The level of permission to grant the access token for viewing an organization\'s plan."},"organization_projects":{"enum":["read","write","admin"],"type":"string","description":"The level of permission to grant the access token to manage organization projects and projects beta (where available)."},"organization_packages":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token for organization packages published to GitHub Packages."},"organization_secrets":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token to manage organization secrets."},"organization_self_hosted_runners":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization."},"organization_user_blocking":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token to view and manage users blocked by the organization."},"team_discussions":{"enum":["read","write"],"type":"string","description":"The level of permission to grant the access token to manage team discussions and related comments."}},"description":"The permissions granted to the user-to-server access token.","example":{"contents":"read","issues":"read","deployments":"write","single_file":"read"}}}}';
    public const SCHEMA_TITLE = '';
    public const SCHEMA_DESCRIPTION = '';
    public const SCHEMA_EXAMPLE_DATA = '{"access_token":"e72e16c7e42f292c6912e7710c838347ae178b4a","target":"octocat","target_id":1,"repositories":["generated_repositories_null"],"repository_ids":[1],"permissions":{"contents":"read","issues":"read","deployments":"write","single_file":"read","actions":"generated_actions_null","administration":"generated_administration_null","checks":"generated_checks_null","environments":"generated_environments_null","metadata":"generated_metadata_null","packages":"generated_packages_null","pages":"generated_pages_null","pull_requests":"generated_pull_requests_null","repository_announcement_banners":"generated_repository_announcement_banners_null","repository_hooks":"generated_repository_hooks_null","repository_projects":"generated_repository_projects_null","secret_scanning_alerts":"generated_secret_scanning_alerts_null","secrets":"generated_secrets_null","security_events":"generated_security_events_null","statuses":"generated_statuses_null","vulnerability_alerts":"generated_vulnerability_alerts_null","workflows":"generated_workflows_null","members":"generated_members_null","organization_administration":"generated_organization_administration_null","organization_custom_roles":"generated_organization_custom_roles_null","organization_announcement_banners":"generated_organization_announcement_banners_null","organization_hooks":"generated_organization_hooks_null","organization_plan":"generated_organization_plan_null","organization_projects":"generated_organization_projects_null","organization_packages":"generated_organization_packages_null","organization_secrets":"generated_organization_secrets_null","organization_self_hosted_runners":"generated_organization_self_hosted_runners_null","organization_user_blocking":"generated_organization_user_blocking_null","team_discussions":"generated_team_discussions_null"}}';
    /**
     * access_token: The access token used to authenticate to the GitHub API.
     * target: The name of the user or organization to scope the user-to-server access token to. **Required** unless `target_id` is specified.
     * target_id: The ID of the user or organization to scope the user-to-server access token to. **Required** unless `target` is specified.
     * repositories: The list of repository names to scope the user-to-server access token to. `repositories` may not be specified if `repository_ids` is specified.
     * @param ?array<string> $repositories
     * repository_ids: The list of repository IDs to scope the user-to-server access token to. `repository_ids` may not be specified if `repositories` is specified.
     * @param ?array<int> $repository_ids
     * permissions: The permissions granted to the user-to-server access token.
     */
    public function __construct(public string $access_token, public ?string $target, public ?int $target_id, public ?array $repositories, public ?array $repository_ids, public ?Schema\AppPermissions $permissions)
    {
    }
}
