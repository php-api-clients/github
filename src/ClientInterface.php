<?php

declare (strict_types=1);
namespace ApiClients\Client\GitHub;

use ApiClients\Client\GitHub\Error as ErrorSchemas;
use ApiClients\Client\GitHub\Hydrator;
use ApiClients\Client\GitHub\Operation;
use ApiClients\Client\GitHub\Schema;
use ApiClients\Client\GitHub\WebHook;
interface ClientInterface
{
    /**
     * @return ($call is Operation\Meta\Root::OPERATION_MATCH ? Schema\Root : ($call is Operation\Apps\GetAuthenticated::OPERATION_MATCH ? Schema\Integration : ($call is Operation\Apps\CreateFromManifest::OPERATION_MATCH ? Schema\Operation\Apps\CreateFromManifest\Response\Applicationjson\H201 : ($call is Operation\Apps\GetWebhookConfigForApp::OPERATION_MATCH ? Schema\WebhookConfig : ($call is Operation\Apps\UpdateWebhookConfigForApp::OPERATION_MATCH ? Schema\WebhookConfig : ($call is Operation\Apps\ListWebhookDeliveries::OPERATION_MATCH ? Schema\HookDeliveryItem : ($call is Operation\Apps\GetWebhookDelivery::OPERATION_MATCH ? Schema\HookDelivery : ($call is Operation\Apps\RedeliverWebhookDelivery::OPERATION_MATCH ? Schema\WebhookDeploymentCreated\Deployment\Payload : ($call is Operation\Apps\ListInstallationRequestsForAuthenticatedApp::OPERATION_MATCH ? Schema\IntegrationInstallationRequest : ($call is Operation\Apps\ListInstallations::OPERATION_MATCH ? Schema\Installation : ($call is Operation\Apps\GetInstallation::OPERATION_MATCH ? Schema\Installation : ($call is Operation\Apps\DeleteInstallation::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Apps\CreateInstallationAccessToken::OPERATION_MATCH ? Schema\InstallationToken : ($call is Operation\Apps\SuspendInstallation::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Apps\UnsuspendInstallation::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Apps\DeleteAuthorization::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Apps\CheckToken::OPERATION_MATCH ? Schema\Authorization : ($call is Operation\Apps\DeleteToken::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Apps\ResetToken::OPERATION_MATCH ? Schema\Authorization : ($call is Operation\Apps\ScopeToken::OPERATION_MATCH ? Schema\Authorization : ($call is Operation\Apps\GetBySlug::OPERATION_MATCH ? Schema\Integration : ($call is Operation\CodesOfConduct\GetAllCodesOfConduct::OPERATION_MATCH ? Schema\CodeOfConduct : ($call is Operation\CodesOfConduct\GetConductCode::OPERATION_MATCH ? Schema\CodeOfConduct : ($call is Operation\Emojis\Get::OPERATION_MATCH ? Schema\OrganizationProgrammaticAccessGrantRequest\Permissions\Organization : ($call is Operation\Dependabot\ListAlertsForEnterprise::OPERATION_MATCH ? Schema\DependabotAlertWithRepository : ($call is Operation\SecretScanning\ListAlertsForEnterprise::OPERATION_MATCH ? Schema\OrganizationSecretScanningAlert : ($call is Operation\Activity\ListPublicEvents::OPERATION_MATCH ? Schema\Event : ($call is Operation\Activity\GetFeeds::OPERATION_MATCH ? Schema\Feed : ($call is Operation\Gists\List_::OPERATION_MATCH ? Schema\BaseGist : ($call is Operation\Gists\Create::OPERATION_MATCH ? Schema\GistSimple : ($call is Operation\Gists\ListPublic::OPERATION_MATCH ? Schema\BaseGist : ($call is Operation\Gists\ListStarred::OPERATION_MATCH ? Schema\BaseGist : ($call is Operation\Gists\Get::OPERATION_MATCH ? Schema\GistSimple : ($call is Operation\Gists\Delete::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Gists\Update::OPERATION_MATCH ? Schema\GistSimple : ($call is Operation\Gists\ListComments::OPERATION_MATCH ? Schema\GistComment : ($call is Operation\Gists\CreateComment::OPERATION_MATCH ? Schema\GistComment : ($call is Operation\Gists\GetComment::OPERATION_MATCH ? Schema\GistComment : ($call is Operation\Gists\DeleteComment::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Gists\UpdateComment::OPERATION_MATCH ? Schema\GistComment : ($call is Operation\Gists\ListCommits::OPERATION_MATCH ? Schema\GistCommit : ($call is Operation\Gists\ListForks::OPERATION_MATCH ? Schema\GistSimple : ($call is Operation\Gists\Fork::OPERATION_MATCH ? Schema\BaseGist : ($call is Operation\Gists\CheckIsStarred::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Gists\Star::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Gists\Unstar::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Gists\GetRevision::OPERATION_MATCH ? Schema\GistSimple : ($call is Operation\Gitignore\GetAllTemplates::OPERATION_MATCH ? Schema\WebHookHeader\UserAgent : ($call is Operation\Gitignore\GetTemplate::OPERATION_MATCH ? Schema\GitignoreTemplate : ($call is Operation\Apps\ListReposAccessibleToInstallation::OPERATION_MATCH ? Schema\Operation\Apps\ListReposAccessibleToInstallation\Response\Applicationjson\H200 : ($call is Operation\Apps\RevokeInstallationAccessToken::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Issues\List_::OPERATION_MATCH ? Schema\Issue : ($call is Operation\Licenses\GetAllCommonlyUsed::OPERATION_MATCH ? Schema\LicenseSimple : ($call is Operation\Licenses\Get::OPERATION_MATCH ? Schema\License : ($call is Operation\Markdown\Render::OPERATION_MATCH ? Schema\WebHookHeader\UserAgent : ($call is Operation\Markdown\RenderRaw::OPERATION_MATCH ? Schema\WebHookHeader\UserAgent : ($call is Operation\Apps\GetSubscriptionPlanForAccount::OPERATION_MATCH ? Schema\MarketplacePurchase : ($call is Operation\Apps\ListPlans::OPERATION_MATCH ? Schema\MarketplaceListingPlan : ($call is Operation\Apps\ListAccountsForPlan::OPERATION_MATCH ? Schema\MarketplacePurchase : ($call is Operation\Apps\GetSubscriptionPlanForAccountStubbed::OPERATION_MATCH ? Schema\MarketplacePurchase : ($call is Operation\Apps\ListPlansStubbed::OPERATION_MATCH ? Schema\MarketplaceListingPlan : ($call is Operation\Apps\ListAccountsForPlanStubbed::OPERATION_MATCH ? Schema\MarketplacePurchase : ($call is Operation\Meta\Get::OPERATION_MATCH ? Schema\ApiOverview : ($call is Operation\Activity\ListPublicEventsForRepoNetwork::OPERATION_MATCH ? Schema\Event|Schema\BasicError : ($call is Operation\Activity\ListNotificationsForAuthenticatedUser::OPERATION_MATCH ? Schema\Thread : ($call is Operation\Activity\MarkNotificationsAsRead::OPERATION_MATCH ? Schema\Operation\Activity\MarkNotificationsAsRead\Response\Applicationjson\H202 : ($call is Operation\Activity\GetThread::OPERATION_MATCH ? Schema\Thread : ($call is Operation\Activity\MarkThreadAsRead::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Activity\GetThreadSubscriptionForAuthenticatedUser::OPERATION_MATCH ? Schema\ThreadSubscription : ($call is Operation\Activity\SetThreadSubscription::OPERATION_MATCH ? Schema\ThreadSubscription : ($call is Operation\Activity\DeleteThreadSubscription::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Meta\GetOctocat::OPERATION_MATCH ? Schema\WebHookHeader\UserAgent : ($call is Operation\Orgs\List_::OPERATION_MATCH ? Schema\OrganizationSimple : ($call is Operation\Orgs\ListPatGrantRequests::OPERATION_MATCH ? Schema\OrganizationProgrammaticAccessGrantRequest : ($call is Operation\Orgs\ReviewPatGrantRequestsInBulk::OPERATION_MATCH ? Schema\WebhookDeploymentCreated\Deployment\Payload : ($call is Operation\Orgs\ReviewPatGrantRequest::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Orgs\ListPatGrantRequestRepositories::OPERATION_MATCH ? Schema\MinimalRepository : ($call is Operation\Orgs\ListPatGrants::OPERATION_MATCH ? Schema\OrganizationProgrammaticAccessGrant : ($call is Operation\Orgs\UpdatePatAccesses::OPERATION_MATCH ? Schema\WebhookDeploymentCreated\Deployment\Payload : ($call is Operation\Orgs\UpdatePatAccess::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Orgs\ListPatGrantRepositories::OPERATION_MATCH ? Schema\MinimalRepository : ($call is Operation\Orgs\Get::OPERATION_MATCH ? Schema\OrganizationFull : ($call is Operation\Orgs\Update::OPERATION_MATCH ? Schema\OrganizationFull : ($call is Operation\Actions\GetActionsCacheUsageForOrg::OPERATION_MATCH ? Schema\ActionsCacheUsageOrgEnterprise : ($call is Operation\Actions\GetActionsCacheUsageByRepoForOrg::OPERATION_MATCH ? Schema\Operation\Actions\GetActionsCacheUsageByRepoForOrg\Response\Applicationjson\H200 : ($call is Operation\Oidc\GetOidcCustomSubTemplateForOrg::OPERATION_MATCH ? Schema\OidcCustomSub : ($call is Operation\Oidc\UpdateOidcCustomSubTemplateForOrg::OPERATION_MATCH ? Schema\EmptyObject : ($call is Operation\Actions\GetGithubActionsPermissionsOrganization::OPERATION_MATCH ? Schema\ActionsOrganizationPermissions : ($call is Operation\Actions\SetGithubActionsPermissionsOrganization::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\ListSelectedRepositoriesEnabledGithubActionsOrganization::OPERATION_MATCH ? Schema\Operation\Actions\ListSelectedRepositoriesEnabledGithubActionsOrganization\Response\Applicationjson\H200 : ($call is Operation\Actions\SetSelectedRepositoriesEnabledGithubActionsOrganization::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\EnableSelectedRepositoryGithubActionsOrganization::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\DisableSelectedRepositoryGithubActionsOrganization::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\GetAllowedActionsOrganization::OPERATION_MATCH ? Schema\SelectedActions : ($call is Operation\Actions\SetAllowedActionsOrganization::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\GetGithubActionsDefaultWorkflowPermissionsOrganization::OPERATION_MATCH ? Schema\ActionsGetDefaultWorkflowPermissions : ($call is Operation\Actions\SetGithubActionsDefaultWorkflowPermissionsOrganization::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\ListRequiredWorkflows::OPERATION_MATCH ? Schema\Operation\Actions\ListRequiredWorkflows\Response\Applicationjson\H200 : ($call is Operation\Actions\CreateRequiredWorkflow::OPERATION_MATCH ? Schema\RequiredWorkflow : ($call is Operation\Actions\GetRequiredWorkflow::OPERATION_MATCH ? Schema\RequiredWorkflow : ($call is Operation\Actions\DeleteRequiredWorkflow::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\UpdateRequiredWorkflow::OPERATION_MATCH ? Schema\RequiredWorkflow : ($call is Operation\Actions\ListSelectedRepositoriesRequiredWorkflow::OPERATION_MATCH ? Schema\Operation\Actions\ListSelectedRepositoriesEnabledGithubActionsOrganization\Response\Applicationjson\H200 : ($call is Operation\Actions\SetSelectedReposToRequiredWorkflow::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\AddSelectedRepoToRequiredWorkflow::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\RemoveSelectedRepoFromRequiredWorkflow::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\ListSelfHostedRunnersForOrg::OPERATION_MATCH ? Schema\Operation\Actions\ListSelfHostedRunnersForOrg\Response\Applicationjson\H200 : ($call is Operation\Actions\ListRunnerApplicationsForOrg::OPERATION_MATCH ? Schema\RunnerApplication : ($call is Operation\Actions\CreateRegistrationTokenForOrg::OPERATION_MATCH ? Schema\AuthenticationToken : ($call is Operation\Actions\CreateRemoveTokenForOrg::OPERATION_MATCH ? Schema\AuthenticationToken : ($call is Operation\Actions\GetSelfHostedRunnerForOrg::OPERATION_MATCH ? Schema\Runner : ($call is Operation\Actions\DeleteSelfHostedRunnerFromOrg::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\ListLabelsForSelfHostedRunnerForOrg::OPERATION_MATCH ? Schema\Operation\Actions\ListLabelsForSelfHostedRunnerForOrg\Response\Applicationjson\H200 : ($call is Operation\Actions\SetCustomLabelsForSelfHostedRunnerForOrg::OPERATION_MATCH ? Schema\Operation\Actions\ListLabelsForSelfHostedRunnerForOrg\Response\Applicationjson\H200 : ($call is Operation\Actions\AddCustomLabelsToSelfHostedRunnerForOrg::OPERATION_MATCH ? Schema\Operation\Actions\ListLabelsForSelfHostedRunnerForOrg\Response\Applicationjson\H200 : ($call is Operation\Actions\RemoveAllCustomLabelsFromSelfHostedRunnerForOrg::OPERATION_MATCH ? Schema\Operation\Actions\ListLabelsForSelfHostedRunnerForOrg\Response\Applicationjson\H200 : ($call is Operation\Actions\RemoveCustomLabelFromSelfHostedRunnerForOrg::OPERATION_MATCH ? Schema\Operation\Actions\ListLabelsForSelfHostedRunnerForOrg\Response\Applicationjson\H200 : ($call is Operation\Actions\ListOrgSecrets::OPERATION_MATCH ? Schema\Operation\Actions\ListOrgSecrets\Response\Applicationjson\H200 : ($call is Operation\Actions\GetOrgPublicKey::OPERATION_MATCH ? Schema\ActionsPublicKey : ($call is Operation\Actions\GetOrgSecret::OPERATION_MATCH ? Schema\OrganizationActionsSecret : ($call is Operation\Actions\CreateOrUpdateOrgSecret::OPERATION_MATCH ? Schema\EmptyObject : ($call is Operation\Actions\DeleteOrgSecret::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\ListSelectedReposForOrgSecret::OPERATION_MATCH ? Schema\Operation\Actions\ListSelectedReposForOrgSecret\Response\Applicationjson\H200 : ($call is Operation\Actions\SetSelectedReposForOrgSecret::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\AddSelectedRepoToOrgSecret::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\RemoveSelectedRepoFromOrgSecret::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\ListOrgVariables::OPERATION_MATCH ? Schema\Operation\Actions\ListOrgVariables\Response\Applicationjson\H200 : ($call is Operation\Actions\CreateOrgVariable::OPERATION_MATCH ? Schema\EmptyObject : ($call is Operation\Actions\GetOrgVariable::OPERATION_MATCH ? Schema\OrganizationActionsVariable : ($call is Operation\Actions\DeleteOrgVariable::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\UpdateOrgVariable::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\ListSelectedReposForOrgVariable::OPERATION_MATCH ? Schema\Operation\Actions\ListSelectedReposForOrgSecret\Response\Applicationjson\H200 : ($call is Operation\Actions\SetSelectedReposForOrgVariable::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\AddSelectedRepoToOrgVariable::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\RemoveSelectedRepoFromOrgVariable::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Orgs\ListBlockedUsers::OPERATION_MATCH ? Schema\SimpleUser : ($call is Operation\Orgs\CheckBlockedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Orgs\BlockUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Orgs\UnblockUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\CodeScanning\ListAlertsForOrg::OPERATION_MATCH ? Schema\CodeScanningOrganizationAlertItems : ($call is Operation\Codespaces\ListInOrganization::OPERATION_MATCH ? Schema\Operation\Codespaces\ListInOrganization\Response\Applicationjson\H200 : ($call is Operation\Codespaces\SetCodespacesBilling::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Codespaces\SetCodespacesBillingUsers::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Codespaces\DeleteCodespacesBillingUsers::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Codespaces\ListOrgSecrets::OPERATION_MATCH ? Schema\Operation\Codespaces\ListOrgSecrets\Response\Applicationjson\H200 : ($call is Operation\Codespaces\GetOrgPublicKey::OPERATION_MATCH ? Schema\CodespacesPublicKey : ($call is Operation\Codespaces\GetOrgSecret::OPERATION_MATCH ? Schema\CodespacesOrgSecret : ($call is Operation\Codespaces\CreateOrUpdateOrgSecret::OPERATION_MATCH ? Schema\EmptyObject : ($call is Operation\Codespaces\DeleteOrgSecret::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Codespaces\ListSelectedReposForOrgSecret::OPERATION_MATCH ? Schema\Operation\Actions\ListSelectedReposForOrgSecret\Response\Applicationjson\H200 : ($call is Operation\Codespaces\SetSelectedReposForOrgSecret::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Codespaces\AddSelectedRepoToOrgSecret::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Codespaces\RemoveSelectedRepoFromOrgSecret::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Dependabot\ListAlertsForOrg::OPERATION_MATCH ? Schema\DependabotAlertWithRepository : ($call is Operation\Dependabot\ListOrgSecrets::OPERATION_MATCH ? Schema\Operation\Dependabot\ListOrgSecrets\Response\Applicationjson\H200 : ($call is Operation\Dependabot\GetOrgPublicKey::OPERATION_MATCH ? Schema\DependabotPublicKey : ($call is Operation\Dependabot\GetOrgSecret::OPERATION_MATCH ? Schema\OrganizationDependabotSecret : ($call is Operation\Dependabot\CreateOrUpdateOrgSecret::OPERATION_MATCH ? Schema\EmptyObject : ($call is Operation\Dependabot\DeleteOrgSecret::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Dependabot\ListSelectedReposForOrgSecret::OPERATION_MATCH ? Schema\Operation\Actions\ListSelectedReposForOrgSecret\Response\Applicationjson\H200 : ($call is Operation\Dependabot\SetSelectedReposForOrgSecret::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Dependabot\AddSelectedRepoToOrgSecret::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Dependabot\RemoveSelectedRepoFromOrgSecret::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Packages\ListDockerMigrationConflictingPackagesForOrganization::OPERATION_MATCH ? Schema\Package : ($call is Operation\Activity\ListPublicOrgEvents::OPERATION_MATCH ? Schema\Event : ($call is Operation\Orgs\ListFailedInvitations::OPERATION_MATCH ? Schema\OrganizationInvitation : ($call is Operation\Orgs\ListWebhooks::OPERATION_MATCH ? Schema\OrgHook : ($call is Operation\Orgs\CreateWebhook::OPERATION_MATCH ? Schema\OrgHook : ($call is Operation\Orgs\GetWebhook::OPERATION_MATCH ? Schema\OrgHook : ($call is Operation\Orgs\DeleteWebhook::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Orgs\UpdateWebhook::OPERATION_MATCH ? Schema\OrgHook : ($call is Operation\Orgs\GetWebhookConfigForOrg::OPERATION_MATCH ? Schema\WebhookConfig : ($call is Operation\Orgs\UpdateWebhookConfigForOrg::OPERATION_MATCH ? Schema\WebhookConfig : ($call is Operation\Orgs\ListWebhookDeliveries::OPERATION_MATCH ? Schema\HookDeliveryItem : ($call is Operation\Orgs\GetWebhookDelivery::OPERATION_MATCH ? Schema\HookDelivery : ($call is Operation\Orgs\RedeliverWebhookDelivery::OPERATION_MATCH ? Schema\WebhookDeploymentCreated\Deployment\Payload : ($call is Operation\Orgs\PingWebhook::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Apps\GetOrgInstallation::OPERATION_MATCH ? Schema\Installation : ($call is Operation\Orgs\ListAppInstallations::OPERATION_MATCH ? Schema\Operation\Orgs\ListAppInstallations\Response\Applicationjson\H200 : ($call is Operation\Interactions\GetRestrictionsForOrg::OPERATION_MATCH ? Schema\Operation\Interactions\GetRestrictionsForOrg\Response\Applicationjson\H200 : ($call is Operation\Interactions\SetRestrictionsForOrg::OPERATION_MATCH ? Schema\InteractionLimitResponse : ($call is Operation\Interactions\RemoveRestrictionsForOrg::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Orgs\ListPendingInvitations::OPERATION_MATCH ? Schema\OrganizationInvitation : ($call is Operation\Orgs\CreateInvitation::OPERATION_MATCH ? Schema\OrganizationInvitation : ($call is Operation\Orgs\CancelInvitation::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Orgs\ListInvitationTeams::OPERATION_MATCH ? Schema\Team : ($call is Operation\Issues\ListForOrg::OPERATION_MATCH ? Schema\Issue : ($call is Operation\Orgs\ListMembers::OPERATION_MATCH ? Schema\SimpleUser : ($call is Operation\Orgs\CheckMembershipForUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Orgs\RemoveMember::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Codespaces\GetCodespacesForUserInOrg::OPERATION_MATCH ? Schema\Operation\Codespaces\ListInOrganization\Response\Applicationjson\H200 : ($call is Operation\Codespaces\DeleteFromOrganization::OPERATION_MATCH ? Schema\WebhookDeploymentCreated\Deployment\Payload : ($call is Operation\Codespaces\StopInOrganization::OPERATION_MATCH ? Schema\Codespace : ($call is Operation\Orgs\GetMembershipForUser::OPERATION_MATCH ? Schema\OrgMembership : ($call is Operation\Orgs\SetMembershipForUser::OPERATION_MATCH ? Schema\OrgMembership : ($call is Operation\Orgs\RemoveMembershipForUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Migrations\ListForOrg::OPERATION_MATCH ? Schema\Migration : ($call is Operation\Migrations\StartForOrg::OPERATION_MATCH ? Schema\Migration : ($call is Operation\Migrations\GetStatusForOrg::OPERATION_MATCH ? Schema\Migration : ($call is Operation\Migrations\DownloadArchiveForOrg::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Migrations\DownloadArchiveForOrgStreaming::OPERATION_MATCH ? iterable<string>|\Psr\Http\Message\ResponseInterface : ($call is Operation\Migrations\DeleteArchiveForOrg::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Migrations\UnlockRepoForOrg::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Migrations\ListReposForOrg::OPERATION_MATCH ? Schema\MinimalRepository : ($call is Operation\Orgs\ListOutsideCollaborators::OPERATION_MATCH ? Schema\SimpleUser : ($call is Operation\Orgs\ConvertMemberToOutsideCollaborator::OPERATION_MATCH ? Schema\Operation\Gists\CheckIsStarred\Response\Applicationjson\H404 : ($call is Operation\Orgs\RemoveOutsideCollaborator::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Packages\ListPackagesForOrganization::OPERATION_MATCH ? Schema\Package : ($call is Operation\Packages\GetPackageForOrganization::OPERATION_MATCH ? Schema\Package : ($call is Operation\Packages\DeletePackageForOrg::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Packages\RestorePackageForOrg::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Packages\GetAllPackageVersionsForPackageOwnedByOrg::OPERATION_MATCH ? Schema\PackageVersion : ($call is Operation\Packages\GetPackageVersionForOrganization::OPERATION_MATCH ? Schema\PackageVersion : ($call is Operation\Packages\DeletePackageVersionForOrg::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Packages\RestorePackageVersionForOrg::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Projects\ListForOrg::OPERATION_MATCH ? Schema\Project : ($call is Operation\Projects\CreateForOrg::OPERATION_MATCH ? Schema\Project : ($call is Operation\Orgs\ListPublicMembers::OPERATION_MATCH ? Schema\SimpleUser : ($call is Operation\Orgs\CheckPublicMembershipForUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Orgs\SetPublicMembershipForAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Orgs\RemovePublicMembershipForAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\ListForOrg::OPERATION_MATCH ? Schema\MinimalRepository : ($call is Operation\Repos\CreateInOrg::OPERATION_MATCH ? Schema\Repository : ($call is Operation\SecretScanning\ListAlertsForOrg::OPERATION_MATCH ? Schema\OrganizationSecretScanningAlert : ($call is Operation\Orgs\ListSecurityManagerTeams::OPERATION_MATCH ? Schema\TeamSimple : ($call is Operation\Orgs\AddSecurityManagerTeam::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Orgs\RemoveSecurityManagerTeam::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Billing\GetGithubActionsBillingOrg::OPERATION_MATCH ? Schema\ActionsBillingUsage : ($call is Operation\Billing\GetGithubPackagesBillingOrg::OPERATION_MATCH ? Schema\PackagesBillingUsage : ($call is Operation\Billing\GetSharedStorageBillingOrg::OPERATION_MATCH ? Schema\CombinedBillingUsage : ($call is Operation\Teams\List_::OPERATION_MATCH ? Schema\Team : ($call is Operation\Teams\Create::OPERATION_MATCH ? Schema\TeamFull : ($call is Operation\Teams\GetByName::OPERATION_MATCH ? Schema\TeamFull : ($call is Operation\Teams\DeleteInOrg::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Teams\UpdateInOrg::OPERATION_MATCH ? Schema\TeamFull : ($call is Operation\Teams\ListDiscussionsInOrg::OPERATION_MATCH ? Schema\TeamDiscussion : ($call is Operation\Teams\CreateDiscussionInOrg::OPERATION_MATCH ? Schema\TeamDiscussion : ($call is Operation\Teams\GetDiscussionInOrg::OPERATION_MATCH ? Schema\TeamDiscussion : ($call is Operation\Teams\DeleteDiscussionInOrg::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Teams\UpdateDiscussionInOrg::OPERATION_MATCH ? Schema\TeamDiscussion : ($call is Operation\Teams\ListDiscussionCommentsInOrg::OPERATION_MATCH ? Schema\TeamDiscussionComment : ($call is Operation\Teams\CreateDiscussionCommentInOrg::OPERATION_MATCH ? Schema\TeamDiscussionComment : ($call is Operation\Teams\GetDiscussionCommentInOrg::OPERATION_MATCH ? Schema\TeamDiscussionComment : ($call is Operation\Teams\DeleteDiscussionCommentInOrg::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Teams\UpdateDiscussionCommentInOrg::OPERATION_MATCH ? Schema\TeamDiscussionComment : ($call is Operation\Reactions\ListForTeamDiscussionCommentInOrg::OPERATION_MATCH ? Schema\Reaction : ($call is Operation\Reactions\CreateForTeamDiscussionCommentInOrg::OPERATION_MATCH ? Schema\Reaction : ($call is Operation\Reactions\DeleteForTeamDiscussionComment::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Reactions\ListForTeamDiscussionInOrg::OPERATION_MATCH ? Schema\Reaction : ($call is Operation\Reactions\CreateForTeamDiscussionInOrg::OPERATION_MATCH ? Schema\Reaction : ($call is Operation\Reactions\DeleteForTeamDiscussion::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Teams\ListPendingInvitationsInOrg::OPERATION_MATCH ? Schema\OrganizationInvitation : ($call is Operation\Teams\ListMembersInOrg::OPERATION_MATCH ? Schema\SimpleUser : ($call is Operation\Teams\GetMembershipForUserInOrg::OPERATION_MATCH ? Schema\TeamMembership : ($call is Operation\Teams\AddOrUpdateMembershipForUserInOrg::OPERATION_MATCH ? Schema\TeamMembership : ($call is Operation\Teams\RemoveMembershipForUserInOrg::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Teams\ListProjectsInOrg::OPERATION_MATCH ? Schema\TeamProject : ($call is Operation\Teams\CheckPermissionsForProjectInOrg::OPERATION_MATCH ? Schema\TeamProject : ($call is Operation\Teams\AddOrUpdateProjectPermissionsInOrg::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Teams\RemoveProjectInOrg::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Teams\ListReposInOrg::OPERATION_MATCH ? Schema\MinimalRepository : ($call is Operation\Teams\CheckPermissionsForRepoInOrg::OPERATION_MATCH ? Schema\TeamRepository : ($call is Operation\Teams\AddOrUpdateRepoPermissionsInOrg::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Teams\RemoveRepoInOrg::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Teams\ListChildInOrg::OPERATION_MATCH ? Schema\Team : ($call is Operation\Orgs\EnableOrDisableSecurityProductOnAllOrgRepos::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Projects\GetCard::OPERATION_MATCH ? Schema\ProjectCard : ($call is Operation\Projects\DeleteCard::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Projects\UpdateCard::OPERATION_MATCH ? Schema\ProjectCard : ($call is Operation\Projects\MoveCard::OPERATION_MATCH ? Schema\Operation\Gists\CheckIsStarred\Response\Applicationjson\H404 : ($call is Operation\Projects\GetColumn::OPERATION_MATCH ? Schema\ProjectColumn : ($call is Operation\Projects\DeleteColumn::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Projects\UpdateColumn::OPERATION_MATCH ? Schema\ProjectColumn : ($call is Operation\Projects\ListCards::OPERATION_MATCH ? Schema\ProjectCard : ($call is Operation\Projects\CreateCard::OPERATION_MATCH ? Schema\ProjectCard : ($call is Operation\Projects\MoveColumn::OPERATION_MATCH ? Schema\Operation\Gists\CheckIsStarred\Response\Applicationjson\H404 : ($call is Operation\Projects\Get::OPERATION_MATCH ? Schema\Project : ($call is Operation\Projects\Delete::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Projects\Update::OPERATION_MATCH ? Schema\Project : ($call is Operation\Projects\ListCollaborators::OPERATION_MATCH ? Schema\SimpleUser : ($call is Operation\Projects\AddCollaborator::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Projects\RemoveCollaborator::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Projects\GetPermissionForUser::OPERATION_MATCH ? Schema\ProjectCollaboratorPermission : ($call is Operation\Projects\ListColumns::OPERATION_MATCH ? Schema\ProjectColumn : ($call is Operation\Projects\CreateColumn::OPERATION_MATCH ? Schema\ProjectColumn : ($call is Operation\RateLimit\Get::OPERATION_MATCH ? Schema\RateLimitOverview : ($call is Operation\Actions\ListRepoRequiredWorkflows::OPERATION_MATCH ? Schema\Operation\Actions\ListRepoRequiredWorkflows\Response\Applicationjson\H200 : ($call is Operation\Actions\GetRepoRequiredWorkflow::OPERATION_MATCH ? Schema\RepoRequiredWorkflow : ($call is Operation\Actions\GetRepoRequiredWorkflowUsage::OPERATION_MATCH ? Schema\WorkflowUsage : ($call is Operation\Repos\Get::OPERATION_MATCH ? Schema\FullRepository|Schema\BasicError : ($call is Operation\Repos\Delete::OPERATION_MATCH ? Schema\BasicError : ($call is Operation\Repos\Update::OPERATION_MATCH ? Schema\FullRepository|Schema\BasicError : ($call is Operation\Actions\ListArtifactsForRepo::OPERATION_MATCH ? Schema\Operation\Actions\ListArtifactsForRepo\Response\Applicationjson\H200 : ($call is Operation\Actions\GetArtifact::OPERATION_MATCH ? Schema\Artifact : ($call is Operation\Actions\DeleteArtifact::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\DownloadArtifact::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\DownloadArtifactStreaming::OPERATION_MATCH ? iterable<string>|\Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\GetActionsCacheUsage::OPERATION_MATCH ? Schema\ActionsCacheUsageByRepository : ($call is Operation\Actions\GetActionsCacheList::OPERATION_MATCH ? Schema\ActionsCacheList : ($call is Operation\Actions\DeleteActionsCacheByKey::OPERATION_MATCH ? Schema\ActionsCacheList : ($call is Operation\Actions\DeleteActionsCacheById::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\GetJobForWorkflowRun::OPERATION_MATCH ? Schema\Job : ($call is Operation\Actions\DownloadJobLogsForWorkflowRun::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\DownloadJobLogsForWorkflowRunStreaming::OPERATION_MATCH ? iterable<string>|\Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\ReRunJobForWorkflowRun::OPERATION_MATCH ? Schema\EmptyObject : ($call is Operation\Actions\GetCustomOidcSubClaimForRepo::OPERATION_MATCH ? Schema\OidcCustomSubRepo : ($call is Operation\Actions\SetCustomOidcSubClaimForRepo::OPERATION_MATCH ? Schema\EmptyObject : ($call is Operation\Actions\ListRepoOrganizationSecrets::OPERATION_MATCH ? Schema\Operation\Actions\ListRepoOrganizationSecrets\Response\Applicationjson\H200 : ($call is Operation\Actions\ListRepoOrganizationVariables::OPERATION_MATCH ? Schema\Operation\Actions\ListRepoOrganizationVariables\Response\Applicationjson\H200 : ($call is Operation\Actions\GetGithubActionsPermissionsRepository::OPERATION_MATCH ? Schema\ActionsRepositoryPermissions : ($call is Operation\Actions\SetGithubActionsPermissionsRepository::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\GetWorkflowAccessToRepository::OPERATION_MATCH ? Schema\ActionsWorkflowAccessToRepository : ($call is Operation\Actions\SetWorkflowAccessToRepository::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\GetAllowedActionsRepository::OPERATION_MATCH ? Schema\SelectedActions : ($call is Operation\Actions\SetAllowedActionsRepository::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\GetGithubActionsDefaultWorkflowPermissionsRepository::OPERATION_MATCH ? Schema\ActionsGetDefaultWorkflowPermissions : ($call is Operation\Actions\SetGithubActionsDefaultWorkflowPermissionsRepository::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\ListRequiredWorkflowRuns::OPERATION_MATCH ? Schema\Operation\Actions\ListRequiredWorkflowRuns\Response\Applicationjson\H200 : ($call is Operation\Actions\ListSelfHostedRunnersForRepo::OPERATION_MATCH ? Schema\Operation\Actions\ListSelfHostedRunnersForOrg\Response\Applicationjson\H200 : ($call is Operation\Actions\ListRunnerApplicationsForRepo::OPERATION_MATCH ? Schema\RunnerApplication : ($call is Operation\Actions\CreateRegistrationTokenForRepo::OPERATION_MATCH ? Schema\AuthenticationToken : ($call is Operation\Actions\CreateRemoveTokenForRepo::OPERATION_MATCH ? Schema\AuthenticationToken : ($call is Operation\Actions\GetSelfHostedRunnerForRepo::OPERATION_MATCH ? Schema\Runner : ($call is Operation\Actions\DeleteSelfHostedRunnerFromRepo::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\ListLabelsForSelfHostedRunnerForRepo::OPERATION_MATCH ? Schema\Operation\Actions\ListLabelsForSelfHostedRunnerForOrg\Response\Applicationjson\H200 : ($call is Operation\Actions\SetCustomLabelsForSelfHostedRunnerForRepo::OPERATION_MATCH ? Schema\Operation\Actions\ListLabelsForSelfHostedRunnerForOrg\Response\Applicationjson\H200 : ($call is Operation\Actions\AddCustomLabelsToSelfHostedRunnerForRepo::OPERATION_MATCH ? Schema\Operation\Actions\ListLabelsForSelfHostedRunnerForOrg\Response\Applicationjson\H200 : ($call is Operation\Actions\RemoveAllCustomLabelsFromSelfHostedRunnerForRepo::OPERATION_MATCH ? Schema\Operation\Actions\ListLabelsForSelfHostedRunnerForOrg\Response\Applicationjson\H200 : ($call is Operation\Actions\RemoveCustomLabelFromSelfHostedRunnerForRepo::OPERATION_MATCH ? Schema\Operation\Actions\ListLabelsForSelfHostedRunnerForOrg\Response\Applicationjson\H200 : ($call is Operation\Actions\ListWorkflowRunsForRepo::OPERATION_MATCH ? Schema\Operation\Actions\ListRequiredWorkflowRuns\Response\Applicationjson\H200 : ($call is Operation\Actions\GetWorkflowRun::OPERATION_MATCH ? Schema\WorkflowRun : ($call is Operation\Actions\DeleteWorkflowRun::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\GetReviewsForRun::OPERATION_MATCH ? Schema\EnvironmentApprovals : ($call is Operation\Actions\ApproveWorkflowRun::OPERATION_MATCH ? Schema\EmptyObject : ($call is Operation\Actions\ListWorkflowRunArtifacts::OPERATION_MATCH ? Schema\Operation\Actions\ListArtifactsForRepo\Response\Applicationjson\H200 : ($call is Operation\Actions\GetWorkflowRunAttempt::OPERATION_MATCH ? Schema\WorkflowRun : ($call is Operation\Actions\ListJobsForWorkflowRunAttempt::OPERATION_MATCH ? Schema\Operation\Actions\ListJobsForWorkflowRunAttempt\Response\Applicationjson\H200 : ($call is Operation\Actions\DownloadWorkflowRunAttemptLogs::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\DownloadWorkflowRunAttemptLogsStreaming::OPERATION_MATCH ? iterable<string>|\Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\CancelWorkflowRun::OPERATION_MATCH ? Schema\EmptyObject : ($call is Operation\Actions\ListJobsForWorkflowRun::OPERATION_MATCH ? Schema\Operation\Actions\ListJobsForWorkflowRunAttempt\Response\Applicationjson\H200 : ($call is Operation\Actions\DownloadWorkflowRunLogs::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\DownloadWorkflowRunLogsStreaming::OPERATION_MATCH ? iterable<string>|\Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\DeleteWorkflowRunLogs::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\GetPendingDeploymentsForRun::OPERATION_MATCH ? Schema\PendingDeployment : ($call is Operation\Actions\ReviewPendingDeploymentsForRun::OPERATION_MATCH ? Schema\Deployment : ($call is Operation\Actions\ReRunWorkflow::OPERATION_MATCH ? Schema\EmptyObject : ($call is Operation\Actions\ReRunWorkflowFailedJobs::OPERATION_MATCH ? Schema\EmptyObject : ($call is Operation\Actions\GetWorkflowRunUsage::OPERATION_MATCH ? Schema\WorkflowRunUsage : ($call is Operation\Actions\ListRepoSecrets::OPERATION_MATCH ? Schema\Operation\Actions\ListRepoOrganizationSecrets\Response\Applicationjson\H200 : ($call is Operation\Actions\GetRepoPublicKey::OPERATION_MATCH ? Schema\ActionsPublicKey : ($call is Operation\Actions\GetRepoSecret::OPERATION_MATCH ? Schema\ActionsSecret : ($call is Operation\Actions\CreateOrUpdateRepoSecret::OPERATION_MATCH ? Schema\EmptyObject : ($call is Operation\Actions\DeleteRepoSecret::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\ListRepoVariables::OPERATION_MATCH ? Schema\Operation\Actions\ListRepoOrganizationVariables\Response\Applicationjson\H200 : ($call is Operation\Actions\CreateRepoVariable::OPERATION_MATCH ? Schema\EmptyObject : ($call is Operation\Actions\GetRepoVariable::OPERATION_MATCH ? Schema\ActionsVariable : ($call is Operation\Actions\DeleteRepoVariable::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\UpdateRepoVariable::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\ListRepoWorkflows::OPERATION_MATCH ? Schema\Operation\Actions\ListRepoWorkflows\Response\Applicationjson\H200 : ($call is Operation\Actions\GetWorkflow::OPERATION_MATCH ? Schema\Workflow : ($call is Operation\Actions\DisableWorkflow::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\CreateWorkflowDispatch::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\EnableWorkflow::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\ListWorkflowRuns::OPERATION_MATCH ? Schema\Operation\Actions\ListRequiredWorkflowRuns\Response\Applicationjson\H200 : ($call is Operation\Actions\GetWorkflowUsage::OPERATION_MATCH ? Schema\WorkflowUsage : ($call is Operation\Issues\ListAssignees::OPERATION_MATCH ? Schema\SimpleUser : ($call is Operation\Issues\CheckUserCanBeAssigned::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\ListAutolinks::OPERATION_MATCH ? Schema\Autolink : ($call is Operation\Repos\CreateAutolink::OPERATION_MATCH ? Schema\Autolink : ($call is Operation\Repos\GetAutolink::OPERATION_MATCH ? Schema\Autolink : ($call is Operation\Repos\DeleteAutolink::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\EnableAutomatedSecurityFixes::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\DisableAutomatedSecurityFixes::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\ListBranches::OPERATION_MATCH ? Schema\ShortBranch : ($call is Operation\Repos\GetBranch::OPERATION_MATCH ? Schema\BranchWithProtection|Schema\BasicError : ($call is Operation\Repos\GetBranchProtection::OPERATION_MATCH ? Schema\BranchProtection : ($call is Operation\Repos\UpdateBranchProtection::OPERATION_MATCH ? Schema\ProtectedBranch : ($call is Operation\Repos\DeleteBranchProtection::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\GetAdminBranchProtection::OPERATION_MATCH ? Schema\ProtectedBranchAdminEnforced : ($call is Operation\Repos\SetAdminBranchProtection::OPERATION_MATCH ? Schema\ProtectedBranchAdminEnforced : ($call is Operation\Repos\DeleteAdminBranchProtection::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\GetPullRequestReviewProtection::OPERATION_MATCH ? Schema\ProtectedBranchPullRequestReview : ($call is Operation\Repos\DeletePullRequestReviewProtection::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\UpdatePullRequestReviewProtection::OPERATION_MATCH ? Schema\ProtectedBranchPullRequestReview : ($call is Operation\Repos\GetCommitSignatureProtection::OPERATION_MATCH ? Schema\ProtectedBranchAdminEnforced : ($call is Operation\Repos\CreateCommitSignatureProtection::OPERATION_MATCH ? Schema\ProtectedBranchAdminEnforced : ($call is Operation\Repos\DeleteCommitSignatureProtection::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\GetStatusChecksProtection::OPERATION_MATCH ? Schema\StatusCheckPolicy : ($call is Operation\Repos\RemoveStatusCheckProtection::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\UpdateStatusCheckProtection::OPERATION_MATCH ? Schema\StatusCheckPolicy : ($call is Operation\Repos\GetAllStatusCheckContexts::OPERATION_MATCH ? Schema\WebHookHeader\UserAgent : ($call is Operation\Repos\SetStatusCheckContexts::OPERATION_MATCH ? Schema\WebHookHeader\UserAgent : ($call is Operation\Repos\AddStatusCheckContexts::OPERATION_MATCH ? Schema\WebHookHeader\UserAgent : ($call is Operation\Repos\RemoveStatusCheckContexts::OPERATION_MATCH ? Schema\WebHookHeader\UserAgent : ($call is Operation\Repos\GetAccessRestrictions::OPERATION_MATCH ? Schema\BranchRestrictionPolicy : ($call is Operation\Repos\DeleteAccessRestrictions::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\GetAppsWithAccessToProtectedBranch::OPERATION_MATCH ? Schema\Integration : ($call is Operation\Repos\SetAppAccessRestrictions::OPERATION_MATCH ? Schema\Integration : ($call is Operation\Repos\AddAppAccessRestrictions::OPERATION_MATCH ? Schema\Integration : ($call is Operation\Repos\RemoveAppAccessRestrictions::OPERATION_MATCH ? Schema\Integration : ($call is Operation\Repos\GetTeamsWithAccessToProtectedBranch::OPERATION_MATCH ? Schema\Team : ($call is Operation\Repos\SetTeamAccessRestrictions::OPERATION_MATCH ? Schema\Team : ($call is Operation\Repos\AddTeamAccessRestrictions::OPERATION_MATCH ? Schema\Team : ($call is Operation\Repos\RemoveTeamAccessRestrictions::OPERATION_MATCH ? Schema\Team : ($call is Operation\Repos\GetUsersWithAccessToProtectedBranch::OPERATION_MATCH ? Schema\SimpleUser : ($call is Operation\Repos\SetUserAccessRestrictions::OPERATION_MATCH ? Schema\SimpleUser : ($call is Operation\Repos\AddUserAccessRestrictions::OPERATION_MATCH ? Schema\SimpleUser : ($call is Operation\Repos\RemoveUserAccessRestrictions::OPERATION_MATCH ? Schema\SimpleUser : ($call is Operation\Repos\RenameBranch::OPERATION_MATCH ? Schema\BranchWithProtection : ($call is Operation\Checks\Create::OPERATION_MATCH ? Schema\CheckRun : ($call is Operation\Checks\Get::OPERATION_MATCH ? Schema\CheckRun : ($call is Operation\Checks\Update::OPERATION_MATCH ? Schema\CheckRun : ($call is Operation\Checks\ListAnnotations::OPERATION_MATCH ? Schema\CheckAnnotation : ($call is Operation\Checks\RerequestRun::OPERATION_MATCH ? Schema\EmptyObject : ($call is Operation\Checks\CreateSuite::OPERATION_MATCH ? Schema\CheckSuite : ($call is Operation\Checks\SetSuitesPreferences::OPERATION_MATCH ? Schema\CheckSuitePreference : ($call is Operation\Checks\GetSuite::OPERATION_MATCH ? Schema\CheckSuite : ($call is Operation\Checks\ListForSuite::OPERATION_MATCH ? Schema\Operation\Checks\ListForSuite\Response\Applicationjson\H200 : ($call is Operation\Checks\RerequestSuite::OPERATION_MATCH ? Schema\EmptyObject : ($call is Operation\CodeScanning\ListAlertsForRepo::OPERATION_MATCH ? Schema\CodeScanningAlertItems : ($call is Operation\CodeScanning\GetAlert::OPERATION_MATCH ? Schema\CodeScanningAlert : ($call is Operation\CodeScanning\UpdateAlert::OPERATION_MATCH ? Schema\CodeScanningAlert : ($call is Operation\CodeScanning\ListAlertInstances::OPERATION_MATCH ? Schema\CodeScanningAlertInstance : ($call is Operation\CodeScanning\ListRecentAnalyses::OPERATION_MATCH ? Schema\CodeScanningAnalysis : ($call is Operation\CodeScanning\GetAnalysis::OPERATION_MATCH ? Schema\CodeScanningAnalysis|Schema\Deployment\Payload : ($call is Operation\CodeScanning\DeleteAnalysis::OPERATION_MATCH ? Schema\CodeScanningAnalysisDeletion : ($call is Operation\CodeScanning\ListCodeqlDatabases::OPERATION_MATCH ? Schema\CodeScanningCodeqlDatabase : ($call is Operation\CodeScanning\GetCodeqlDatabase::OPERATION_MATCH ? Schema\CodeScanningCodeqlDatabase : ($call is Operation\CodeScanning\GetDefaultSetup::OPERATION_MATCH ? Schema\CodeScanningDefaultSetup : ($call is Operation\CodeScanning\UpdateDefaultSetup::OPERATION_MATCH ? Schema\EmptyObject|Schema\CodeScanningDefaultSetupUpdateResponse : ($call is Operation\CodeScanning\UploadSarif::OPERATION_MATCH ? Schema\CodeScanningSarifsReceipt : ($call is Operation\CodeScanning\GetSarif::OPERATION_MATCH ? Schema\CodeScanningSarifsStatus : ($call is Operation\Repos\CodeownersErrors::OPERATION_MATCH ? Schema\CodeownersErrors : ($call is Operation\Codespaces\ListInRepositoryForAuthenticatedUser::OPERATION_MATCH ? Schema\Operation\Codespaces\ListInOrganization\Response\Applicationjson\H200 : ($call is Operation\Codespaces\CreateWithRepoForAuthenticatedUser::OPERATION_MATCH ? Schema\Codespace : ($call is Operation\Codespaces\ListDevcontainersInRepositoryForAuthenticatedUser::OPERATION_MATCH ? Schema\Operation\Codespaces\ListDevcontainersInRepositoryForAuthenticatedUser\Response\Applicationjson\H200 : ($call is Operation\Codespaces\RepoMachinesForAuthenticatedUser::OPERATION_MATCH ? Schema\Operation\Codespaces\RepoMachinesForAuthenticatedUser\Response\Applicationjson\H200 : ($call is Operation\Codespaces\PreFlightWithRepoForAuthenticatedUser::OPERATION_MATCH ? Schema\Operation\Codespaces\PreFlightWithRepoForAuthenticatedUser\Response\Applicationjson\H200 : ($call is Operation\Codespaces\ListRepoSecrets::OPERATION_MATCH ? Schema\Operation\Codespaces\ListRepoSecrets\Response\Applicationjson\H200 : ($call is Operation\Codespaces\GetRepoPublicKey::OPERATION_MATCH ? Schema\CodespacesPublicKey : ($call is Operation\Codespaces\GetRepoSecret::OPERATION_MATCH ? Schema\RepoCodespacesSecret : ($call is Operation\Codespaces\CreateOrUpdateRepoSecret::OPERATION_MATCH ? Schema\EmptyObject : ($call is Operation\Codespaces\DeleteRepoSecret::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\ListCollaborators::OPERATION_MATCH ? Schema\Collaborator : ($call is Operation\Repos\CheckCollaborator::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\AddCollaborator::OPERATION_MATCH ? Schema\RepositoryInvitation : ($call is Operation\Repos\RemoveCollaborator::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\GetCollaboratorPermissionLevel::OPERATION_MATCH ? Schema\RepositoryCollaboratorPermission : ($call is Operation\Repos\ListCommitCommentsForRepo::OPERATION_MATCH ? Schema\CommitComment : ($call is Operation\Repos\GetCommitComment::OPERATION_MATCH ? Schema\CommitComment : ($call is Operation\Repos\DeleteCommitComment::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\UpdateCommitComment::OPERATION_MATCH ? Schema\CommitComment : ($call is Operation\Reactions\ListForCommitComment::OPERATION_MATCH ? Schema\Reaction : ($call is Operation\Reactions\CreateForCommitComment::OPERATION_MATCH ? Schema\Reaction : ($call is Operation\Reactions\DeleteForCommitComment::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\ListCommits::OPERATION_MATCH ? Schema\Commit : ($call is Operation\Repos\ListBranchesForHeadCommit::OPERATION_MATCH ? Schema\BranchShort : ($call is Operation\Repos\ListCommentsForCommit::OPERATION_MATCH ? Schema\CommitComment : ($call is Operation\Repos\CreateCommitComment::OPERATION_MATCH ? Schema\CommitComment : ($call is Operation\Repos\ListPullRequestsAssociatedWithCommit::OPERATION_MATCH ? Schema\PullRequestSimple : ($call is Operation\Repos\GetCommit::OPERATION_MATCH ? Schema\Commit : ($call is Operation\Checks\ListForRef::OPERATION_MATCH ? Schema\Operation\Checks\ListForSuite\Response\Applicationjson\H200 : ($call is Operation\Checks\ListSuitesForRef::OPERATION_MATCH ? Schema\Operation\Checks\ListSuitesForRef\Response\Applicationjson\H200 : ($call is Operation\Repos\GetCombinedStatusForRef::OPERATION_MATCH ? Schema\CombinedCommitStatus : ($call is Operation\Repos\ListCommitStatusesForRef::OPERATION_MATCH ? Schema\Status|Schema\BasicError : ($call is Operation\Repos\GetCommunityProfileMetrics::OPERATION_MATCH ? Schema\CommunityProfile : ($call is Operation\Repos\CompareCommits::OPERATION_MATCH ? Schema\CommitComparison : ($call is Operation\Repos\GetContent::OPERATION_MATCH ? Schema\ContentTree|Schema\Operation\Repos\GetContent\Response\Applicationjson\H200 : ($call is Operation\Repos\CreateOrUpdateFileContents::OPERATION_MATCH ? Schema\FileCommit : ($call is Operation\Repos\DeleteFile::OPERATION_MATCH ? Schema\FileCommit : ($call is Operation\Repos\ListContributors::OPERATION_MATCH ? Schema\Contributor : ($call is Operation\Dependabot\ListAlertsForRepo::OPERATION_MATCH ? Schema\DependabotAlert : ($call is Operation\Dependabot\GetAlert::OPERATION_MATCH ? Schema\DependabotAlert : ($call is Operation\Dependabot\UpdateAlert::OPERATION_MATCH ? Schema\DependabotAlert : ($call is Operation\Dependabot\ListRepoSecrets::OPERATION_MATCH ? Schema\Operation\Dependabot\ListRepoSecrets\Response\Applicationjson\H200 : ($call is Operation\Dependabot\GetRepoPublicKey::OPERATION_MATCH ? Schema\DependabotPublicKey : ($call is Operation\Dependabot\GetRepoSecret::OPERATION_MATCH ? Schema\DependabotSecret : ($call is Operation\Dependabot\CreateOrUpdateRepoSecret::OPERATION_MATCH ? Schema\EmptyObject : ($call is Operation\Dependabot\DeleteRepoSecret::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\DependencyGraph\DiffRange::OPERATION_MATCH ? Schema\DependencyGraphDiff : ($call is Operation\DependencyGraph\CreateRepositorySnapshot::OPERATION_MATCH ? Schema\Operation\DependencyGraph\CreateRepositorySnapshot\Response\Applicationjson\H201 : ($call is Operation\Repos\ListDeployments::OPERATION_MATCH ? Schema\Deployment : ($call is Operation\Repos\CreateDeployment::OPERATION_MATCH ? Schema\Deployment|Schema\Operation\Activity\MarkNotificationsAsRead\Response\Applicationjson\H202 : ($call is Operation\Repos\GetDeployment::OPERATION_MATCH ? Schema\Deployment : ($call is Operation\Repos\DeleteDeployment::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\ListDeploymentStatuses::OPERATION_MATCH ? Schema\DeploymentStatus : ($call is Operation\Repos\CreateDeploymentStatus::OPERATION_MATCH ? Schema\DeploymentStatus : ($call is Operation\Repos\GetDeploymentStatus::OPERATION_MATCH ? Schema\DeploymentStatus : ($call is Operation\Repos\CreateDispatchEvent::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\GetAllEnvironments::OPERATION_MATCH ? Schema\Operation\Repos\GetAllEnvironments\Response\Applicationjson\H200 : ($call is Operation\Repos\GetEnvironment::OPERATION_MATCH ? Schema\Environment : ($call is Operation\Repos\CreateOrUpdateEnvironment::OPERATION_MATCH ? Schema\Environment : ($call is Operation\Repos\DeleteAnEnvironment::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\ListDeploymentBranchPolicies::OPERATION_MATCH ? Schema\Operation\Repos\ListDeploymentBranchPolicies\Response\Applicationjson\H200 : ($call is Operation\Repos\CreateDeploymentBranchPolicy::OPERATION_MATCH ? Schema\DeploymentBranchPolicy : ($call is Operation\Repos\GetDeploymentBranchPolicy::OPERATION_MATCH ? Schema\DeploymentBranchPolicy : ($call is Operation\Repos\UpdateDeploymentBranchPolicy::OPERATION_MATCH ? Schema\DeploymentBranchPolicy : ($call is Operation\Repos\DeleteDeploymentBranchPolicy::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Activity\ListRepoEvents::OPERATION_MATCH ? Schema\Event : ($call is Operation\Repos\ListForks::OPERATION_MATCH ? Schema\MinimalRepository : ($call is Operation\Repos\CreateFork::OPERATION_MATCH ? Schema\FullRepository : ($call is Operation\Git\CreateBlob::OPERATION_MATCH ? Schema\ShortBlob : ($call is Operation\Git\GetBlob::OPERATION_MATCH ? Schema\Blob : ($call is Operation\Git\CreateCommit::OPERATION_MATCH ? Schema\GitCommit : ($call is Operation\Git\GetCommit::OPERATION_MATCH ? Schema\GitCommit : ($call is Operation\Git\ListMatchingRefs::OPERATION_MATCH ? Schema\GitRef : ($call is Operation\Git\GetRef::OPERATION_MATCH ? Schema\GitRef : ($call is Operation\Git\CreateRef::OPERATION_MATCH ? Schema\GitRef : ($call is Operation\Git\DeleteRef::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Git\UpdateRef::OPERATION_MATCH ? Schema\GitRef : ($call is Operation\Git\CreateTag::OPERATION_MATCH ? Schema\GitTag : ($call is Operation\Git\GetTag::OPERATION_MATCH ? Schema\GitTag : ($call is Operation\Git\CreateTree::OPERATION_MATCH ? Schema\GitTree : ($call is Operation\Git\GetTree::OPERATION_MATCH ? Schema\GitTree : ($call is Operation\Repos\ListWebhooks::OPERATION_MATCH ? Schema\Hook : ($call is Operation\Repos\CreateWebhook::OPERATION_MATCH ? Schema\Hook : ($call is Operation\Repos\GetWebhook::OPERATION_MATCH ? Schema\Hook : ($call is Operation\Repos\DeleteWebhook::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\UpdateWebhook::OPERATION_MATCH ? Schema\Hook : ($call is Operation\Repos\GetWebhookConfigForRepo::OPERATION_MATCH ? Schema\WebhookConfig : ($call is Operation\Repos\UpdateWebhookConfigForRepo::OPERATION_MATCH ? Schema\WebhookConfig : ($call is Operation\Repos\ListWebhookDeliveries::OPERATION_MATCH ? Schema\HookDeliveryItem : ($call is Operation\Repos\GetWebhookDelivery::OPERATION_MATCH ? Schema\HookDelivery : ($call is Operation\Repos\RedeliverWebhookDelivery::OPERATION_MATCH ? Schema\WebhookDeploymentCreated\Deployment\Payload : ($call is Operation\Repos\PingWebhook::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\TestPushWebhook::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Migrations\GetImportStatus::OPERATION_MATCH ? Schema\Import : ($call is Operation\Migrations\StartImport::OPERATION_MATCH ? Schema\Import : ($call is Operation\Migrations\CancelImport::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Migrations\UpdateImport::OPERATION_MATCH ? Schema\Import : ($call is Operation\Migrations\GetCommitAuthors::OPERATION_MATCH ? Schema\PorterAuthor : ($call is Operation\Migrations\MapCommitAuthor::OPERATION_MATCH ? Schema\PorterAuthor : ($call is Operation\Migrations\GetLargeFiles::OPERATION_MATCH ? Schema\PorterLargeFile : ($call is Operation\Migrations\SetLfsPreference::OPERATION_MATCH ? Schema\Import : ($call is Operation\Apps\GetRepoInstallation::OPERATION_MATCH ? Schema\Installation|Schema\BasicError : ($call is Operation\Interactions\GetRestrictionsForRepo::OPERATION_MATCH ? Schema\Operation\Interactions\GetRestrictionsForOrg\Response\Applicationjson\H200 : ($call is Operation\Interactions\SetRestrictionsForRepo::OPERATION_MATCH ? Schema\InteractionLimitResponse : ($call is Operation\Interactions\RemoveRestrictionsForRepo::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\ListInvitations::OPERATION_MATCH ? Schema\RepositoryInvitation : ($call is Operation\Repos\DeleteInvitation::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\UpdateInvitation::OPERATION_MATCH ? Schema\RepositoryInvitation : ($call is Operation\Issues\ListForRepo::OPERATION_MATCH ? Schema\Issue|Schema\BasicError : ($call is Operation\Issues\Create::OPERATION_MATCH ? Schema\Issue : ($call is Operation\Issues\ListCommentsForRepo::OPERATION_MATCH ? Schema\IssueComment : ($call is Operation\Issues\GetComment::OPERATION_MATCH ? Schema\IssueComment : ($call is Operation\Issues\DeleteComment::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Issues\UpdateComment::OPERATION_MATCH ? Schema\IssueComment : ($call is Operation\Reactions\ListForIssueComment::OPERATION_MATCH ? Schema\Reaction : ($call is Operation\Reactions\CreateForIssueComment::OPERATION_MATCH ? Schema\Reaction : ($call is Operation\Reactions\DeleteForIssueComment::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Issues\ListEventsForRepo::OPERATION_MATCH ? Schema\IssueEvent : ($call is Operation\Issues\GetEvent::OPERATION_MATCH ? Schema\IssueEvent : ($call is Operation\Issues\Get::OPERATION_MATCH ? Schema\Issue|Schema\BasicError : ($call is Operation\Issues\Update::OPERATION_MATCH ? Schema\Issue|Schema\BasicError : ($call is Operation\Issues\AddAssignees::OPERATION_MATCH ? Schema\Issue : ($call is Operation\Issues\RemoveAssignees::OPERATION_MATCH ? Schema\Issue : ($call is Operation\Issues\CheckUserCanBeAssignedToIssue::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Issues\ListComments::OPERATION_MATCH ? Schema\IssueComment : ($call is Operation\Issues\CreateComment::OPERATION_MATCH ? Schema\IssueComment : ($call is Operation\Issues\ListEvents::OPERATION_MATCH ? Schema\IssueEventForIssue : ($call is Operation\Issues\ListLabelsOnIssue::OPERATION_MATCH ? Schema\Label|Schema\BasicError : ($call is Operation\Issues\SetLabels::OPERATION_MATCH ? Schema\Label|Schema\BasicError : ($call is Operation\Issues\AddLabels::OPERATION_MATCH ? Schema\Label|Schema\BasicError : ($call is Operation\Issues\RemoveAllLabels::OPERATION_MATCH ? Schema\BasicError : ($call is Operation\Issues\RemoveLabel::OPERATION_MATCH ? Schema\Label|Schema\BasicError : ($call is Operation\Issues\Lock::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Issues\Unlock::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Reactions\ListForIssue::OPERATION_MATCH ? Schema\Reaction : ($call is Operation\Reactions\CreateForIssue::OPERATION_MATCH ? Schema\Reaction : ($call is Operation\Reactions\DeleteForIssue::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Issues\ListEventsForTimeline::OPERATION_MATCH ? Schema\TimelineIssueEvents : ($call is Operation\Repos\ListDeployKeys::OPERATION_MATCH ? Schema\DeployKey : ($call is Operation\Repos\CreateDeployKey::OPERATION_MATCH ? Schema\DeployKey : ($call is Operation\Repos\GetDeployKey::OPERATION_MATCH ? Schema\DeployKey : ($call is Operation\Repos\DeleteDeployKey::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Issues\ListLabelsForRepo::OPERATION_MATCH ? Schema\Label : ($call is Operation\Issues\CreateLabel::OPERATION_MATCH ? Schema\Label : ($call is Operation\Issues\GetLabel::OPERATION_MATCH ? Schema\Label : ($call is Operation\Issues\DeleteLabel::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Issues\UpdateLabel::OPERATION_MATCH ? Schema\Label : ($call is Operation\Repos\ListLanguages::OPERATION_MATCH ? Schema\Language : ($call is Operation\Repos\EnableLfsForRepo::OPERATION_MATCH ? Schema\WebhookDeploymentCreated\Deployment\Payload : ($call is Operation\Repos\DisableLfsForRepo::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Licenses\GetForRepo::OPERATION_MATCH ? Schema\LicenseContent : ($call is Operation\Repos\MergeUpstream::OPERATION_MATCH ? Schema\MergedUpstream : ($call is Operation\Repos\Merge::OPERATION_MATCH ? Schema\Commit : ($call is Operation\Issues\ListMilestones::OPERATION_MATCH ? Schema\Milestone : ($call is Operation\Issues\CreateMilestone::OPERATION_MATCH ? Schema\Milestone : ($call is Operation\Issues\GetMilestone::OPERATION_MATCH ? Schema\Milestone : ($call is Operation\Issues\DeleteMilestone::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Issues\UpdateMilestone::OPERATION_MATCH ? Schema\Milestone : ($call is Operation\Issues\ListLabelsForMilestone::OPERATION_MATCH ? Schema\Label : ($call is Operation\Activity\ListRepoNotificationsForAuthenticatedUser::OPERATION_MATCH ? Schema\Thread : ($call is Operation\Activity\MarkRepoNotificationsAsRead::OPERATION_MATCH ? Schema\Operation\Activity\MarkRepoNotificationsAsRead\Response\Applicationjson\H202 : ($call is Operation\Repos\GetPages::OPERATION_MATCH ? Schema\Page : ($call is Operation\Repos\UpdateInformationAboutPagesSite::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\CreatePagesSite::OPERATION_MATCH ? Schema\Page : ($call is Operation\Repos\DeletePagesSite::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\ListPagesBuilds::OPERATION_MATCH ? Schema\PageBuild : ($call is Operation\Repos\RequestPagesBuild::OPERATION_MATCH ? Schema\PageBuildStatus : ($call is Operation\Repos\GetLatestPagesBuild::OPERATION_MATCH ? Schema\PageBuild : ($call is Operation\Repos\GetPagesBuild::OPERATION_MATCH ? Schema\PageBuild : ($call is Operation\Repos\CreatePagesDeployment::OPERATION_MATCH ? Schema\PageDeployment : ($call is Operation\Repos\GetPagesHealthCheck::OPERATION_MATCH ? Schema\PagesHealthCheck|Schema\EmptyObject : ($call is Operation\Projects\ListForRepo::OPERATION_MATCH ? Schema\Project : ($call is Operation\Projects\CreateForRepo::OPERATION_MATCH ? Schema\Project : ($call is Operation\Pulls\List_::OPERATION_MATCH ? Schema\PullRequestSimple : ($call is Operation\Pulls\Create::OPERATION_MATCH ? Schema\PullRequest : ($call is Operation\Pulls\ListReviewCommentsForRepo::OPERATION_MATCH ? Schema\PullRequestReviewComment : ($call is Operation\Pulls\GetReviewComment::OPERATION_MATCH ? Schema\PullRequestReviewComment : ($call is Operation\Pulls\DeleteReviewComment::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Pulls\UpdateReviewComment::OPERATION_MATCH ? Schema\PullRequestReviewComment : ($call is Operation\Reactions\ListForPullRequestReviewComment::OPERATION_MATCH ? Schema\Reaction : ($call is Operation\Reactions\CreateForPullRequestReviewComment::OPERATION_MATCH ? Schema\Reaction : ($call is Operation\Reactions\DeleteForPullRequestComment::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Pulls\Get::OPERATION_MATCH ? Schema\PullRequest : ($call is Operation\Pulls\Update::OPERATION_MATCH ? Schema\PullRequest : ($call is Operation\Codespaces\CreateWithPrForAuthenticatedUser::OPERATION_MATCH ? Schema\Codespace : ($call is Operation\Pulls\ListReviewComments::OPERATION_MATCH ? Schema\PullRequestReviewComment : ($call is Operation\Pulls\CreateReviewComment::OPERATION_MATCH ? Schema\PullRequestReviewComment : ($call is Operation\Pulls\CreateReplyForReviewComment::OPERATION_MATCH ? Schema\PullRequestReviewComment : ($call is Operation\Pulls\ListCommits::OPERATION_MATCH ? Schema\Commit : ($call is Operation\Pulls\ListFiles::OPERATION_MATCH ? Schema\DiffEntry : ($call is Operation\Pulls\CheckIfMerged::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Pulls\Merge::OPERATION_MATCH ? Schema\PullRequestMergeResult : ($call is Operation\Pulls\ListRequestedReviewers::OPERATION_MATCH ? Schema\PullRequestReviewRequest : ($call is Operation\Pulls\RequestReviewers::OPERATION_MATCH ? Schema\PullRequestSimple : ($call is Operation\Pulls\RemoveRequestedReviewers::OPERATION_MATCH ? Schema\PullRequestSimple : ($call is Operation\Pulls\ListReviews::OPERATION_MATCH ? Schema\PullRequestReview : ($call is Operation\Pulls\CreateReview::OPERATION_MATCH ? Schema\PullRequestReview : ($call is Operation\Pulls\GetReview::OPERATION_MATCH ? Schema\PullRequestReview : ($call is Operation\Pulls\UpdateReview::OPERATION_MATCH ? Schema\PullRequestReview : ($call is Operation\Pulls\DeletePendingReview::OPERATION_MATCH ? Schema\PullRequestReview : ($call is Operation\Pulls\ListCommentsForReview::OPERATION_MATCH ? Schema\ReviewComment : ($call is Operation\Pulls\DismissReview::OPERATION_MATCH ? Schema\PullRequestReview : ($call is Operation\Pulls\SubmitReview::OPERATION_MATCH ? Schema\PullRequestReview : ($call is Operation\Pulls\UpdateBranch::OPERATION_MATCH ? Schema\Operation\Activity\MarkRepoNotificationsAsRead\Response\Applicationjson\H202 : ($call is Operation\Repos\GetReadme::OPERATION_MATCH ? Schema\ContentFile : ($call is Operation\Repos\GetReadmeInDirectory::OPERATION_MATCH ? Schema\ContentFile : ($call is Operation\Repos\ListReleases::OPERATION_MATCH ? Schema\Release : ($call is Operation\Repos\CreateRelease::OPERATION_MATCH ? Schema\Release : ($call is Operation\Repos\GetReleaseAsset::OPERATION_MATCH ? Schema\ReleaseAsset : ($call is Operation\Repos\DeleteReleaseAsset::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\UpdateReleaseAsset::OPERATION_MATCH ? Schema\ReleaseAsset : ($call is Operation\Repos\GenerateReleaseNotes::OPERATION_MATCH ? Schema\ReleaseNotesContent : ($call is Operation\Repos\GetLatestRelease::OPERATION_MATCH ? Schema\Release : ($call is Operation\Repos\GetReleaseByTag::OPERATION_MATCH ? Schema\Release : ($call is Operation\Repos\GetRelease::OPERATION_MATCH ? Schema\Release : ($call is Operation\Repos\DeleteRelease::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\UpdateRelease::OPERATION_MATCH ? Schema\Release : ($call is Operation\Repos\ListReleaseAssets::OPERATION_MATCH ? Schema\ReleaseAsset : ($call is Operation\Repos\UploadReleaseAsset::OPERATION_MATCH ? Schema\ReleaseAsset : ($call is Operation\Reactions\ListForRelease::OPERATION_MATCH ? Schema\Reaction : ($call is Operation\Reactions\CreateForRelease::OPERATION_MATCH ? Schema\Reaction : ($call is Operation\Reactions\DeleteForRelease::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\SecretScanning\ListAlertsForRepo::OPERATION_MATCH ? Schema\SecretScanningAlert : ($call is Operation\SecretScanning\GetAlert::OPERATION_MATCH ? Schema\SecretScanningAlert : ($call is Operation\SecretScanning\UpdateAlert::OPERATION_MATCH ? Schema\SecretScanningAlert : ($call is Operation\SecretScanning\ListLocationsForAlert::OPERATION_MATCH ? Schema\SecretScanningLocation : ($call is Operation\Activity\ListStargazersForRepo::OPERATION_MATCH ? Schema\Operation\Activity\ListStargazersForRepo\Response\Applicationjson\H200 : ($call is Operation\Repos\GetCodeFrequencyStats::OPERATION_MATCH ? Schema\Operation\Repos\GetCodeFrequencyStats\Response\Applicationjson\H200|Schema\WebhookDeploymentCreated\Deployment\Payload : ($call is Operation\Repos\GetCommitActivityStats::OPERATION_MATCH ? Schema\CommitActivity|Schema\WebhookDeploymentCreated\Deployment\Payload : ($call is Operation\Repos\GetContributorsStats::OPERATION_MATCH ? Schema\ContributorActivity|Schema\WebhookDeploymentCreated\Deployment\Payload : ($call is Operation\Repos\GetParticipationStats::OPERATION_MATCH ? Schema\ParticipationStats : ($call is Operation\Repos\GetPunchCardStats::OPERATION_MATCH ? Schema\Operation\Repos\GetCodeFrequencyStats\Response\Applicationjson\H200 : ($call is Operation\Repos\CreateCommitStatus::OPERATION_MATCH ? Schema\Status : ($call is Operation\Activity\ListWatchersForRepo::OPERATION_MATCH ? Schema\SimpleUser : ($call is Operation\Activity\GetRepoSubscription::OPERATION_MATCH ? Schema\RepositorySubscription : ($call is Operation\Activity\SetRepoSubscription::OPERATION_MATCH ? Schema\RepositorySubscription : ($call is Operation\Activity\DeleteRepoSubscription::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\ListTags::OPERATION_MATCH ? Schema\Tag : ($call is Operation\Repos\ListTagProtection::OPERATION_MATCH ? Schema\TagProtection : ($call is Operation\Repos\CreateTagProtection::OPERATION_MATCH ? Schema\TagProtection : ($call is Operation\Repos\DeleteTagProtection::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\DownloadTarballArchive::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\DownloadTarballArchiveStreaming::OPERATION_MATCH ? iterable<string>|\Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\ListTeams::OPERATION_MATCH ? Schema\Team : ($call is Operation\Repos\GetAllTopics::OPERATION_MATCH ? Schema\Topic : ($call is Operation\Repos\ReplaceAllTopics::OPERATION_MATCH ? Schema\Topic : ($call is Operation\Repos\GetClones::OPERATION_MATCH ? Schema\CloneTraffic : ($call is Operation\Repos\GetTopPaths::OPERATION_MATCH ? Schema\ContentTraffic : ($call is Operation\Repos\GetTopReferrers::OPERATION_MATCH ? Schema\ReferrerTraffic : ($call is Operation\Repos\GetViews::OPERATION_MATCH ? Schema\ViewTraffic : ($call is Operation\Repos\Transfer::OPERATION_MATCH ? Schema\MinimalRepository : ($call is Operation\Repos\CheckVulnerabilityAlerts::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\EnableVulnerabilityAlerts::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\DisableVulnerabilityAlerts::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\DownloadZipballArchive::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\DownloadZipballArchiveStreaming::OPERATION_MATCH ? iterable<string>|\Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\CreateUsingTemplate::OPERATION_MATCH ? Schema\Repository : ($call is Operation\Repos\ListPublic::OPERATION_MATCH ? Schema\MinimalRepository : ($call is Operation\Actions\ListEnvironmentSecrets::OPERATION_MATCH ? Schema\Operation\Actions\ListRepoOrganizationSecrets\Response\Applicationjson\H200 : ($call is Operation\Actions\GetEnvironmentPublicKey::OPERATION_MATCH ? Schema\ActionsPublicKey : ($call is Operation\Actions\GetEnvironmentSecret::OPERATION_MATCH ? Schema\ActionsSecret : ($call is Operation\Actions\CreateOrUpdateEnvironmentSecret::OPERATION_MATCH ? Schema\EmptyObject : ($call is Operation\Actions\DeleteEnvironmentSecret::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\ListEnvironmentVariables::OPERATION_MATCH ? Schema\Operation\Actions\ListRepoOrganizationVariables\Response\Applicationjson\H200 : ($call is Operation\Actions\CreateEnvironmentVariable::OPERATION_MATCH ? Schema\EmptyObject : ($call is Operation\Actions\GetEnvironmentVariable::OPERATION_MATCH ? Schema\ActionsVariable : ($call is Operation\Actions\DeleteEnvironmentVariable::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Actions\UpdateEnvironmentVariable::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Search\Code::OPERATION_MATCH ? Schema\Operation\Search\Code\Response\Applicationjson\H200 : ($call is Operation\Search\Commits::OPERATION_MATCH ? Schema\Operation\Search\Commits\Response\Applicationjson\H200 : ($call is Operation\Search\IssuesAndPullRequests::OPERATION_MATCH ? Schema\Operation\Search\IssuesAndPullRequests\Response\Applicationjson\H200 : ($call is Operation\Search\Labels::OPERATION_MATCH ? Schema\Operation\Search\Labels\Response\Applicationjson\H200 : ($call is Operation\Search\Repos::OPERATION_MATCH ? Schema\Operation\Search\Repos\Response\Applicationjson\H200 : ($call is Operation\Search\Topics::OPERATION_MATCH ? Schema\Operation\Search\Topics\Response\Applicationjson\H200 : ($call is Operation\Search\Users::OPERATION_MATCH ? Schema\Operation\Search\Users\Response\Applicationjson\H200 : ($call is Operation\Teams\GetLegacy::OPERATION_MATCH ? Schema\TeamFull : ($call is Operation\Teams\DeleteLegacy::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Teams\UpdateLegacy::OPERATION_MATCH ? Schema\TeamFull : ($call is Operation\Teams\ListDiscussionsLegacy::OPERATION_MATCH ? Schema\TeamDiscussion : ($call is Operation\Teams\CreateDiscussionLegacy::OPERATION_MATCH ? Schema\TeamDiscussion : ($call is Operation\Teams\GetDiscussionLegacy::OPERATION_MATCH ? Schema\TeamDiscussion : ($call is Operation\Teams\DeleteDiscussionLegacy::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Teams\UpdateDiscussionLegacy::OPERATION_MATCH ? Schema\TeamDiscussion : ($call is Operation\Teams\ListDiscussionCommentsLegacy::OPERATION_MATCH ? Schema\TeamDiscussionComment : ($call is Operation\Teams\CreateDiscussionCommentLegacy::OPERATION_MATCH ? Schema\TeamDiscussionComment : ($call is Operation\Teams\GetDiscussionCommentLegacy::OPERATION_MATCH ? Schema\TeamDiscussionComment : ($call is Operation\Teams\DeleteDiscussionCommentLegacy::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Teams\UpdateDiscussionCommentLegacy::OPERATION_MATCH ? Schema\TeamDiscussionComment : ($call is Operation\Reactions\ListForTeamDiscussionCommentLegacy::OPERATION_MATCH ? Schema\Reaction : ($call is Operation\Reactions\CreateForTeamDiscussionCommentLegacy::OPERATION_MATCH ? Schema\Reaction : ($call is Operation\Reactions\ListForTeamDiscussionLegacy::OPERATION_MATCH ? Schema\Reaction : ($call is Operation\Reactions\CreateForTeamDiscussionLegacy::OPERATION_MATCH ? Schema\Reaction : ($call is Operation\Teams\ListPendingInvitationsLegacy::OPERATION_MATCH ? Schema\OrganizationInvitation : ($call is Operation\Teams\ListMembersLegacy::OPERATION_MATCH ? Schema\SimpleUser : ($call is Operation\Teams\GetMemberLegacy::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Teams\AddMemberLegacy::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Teams\RemoveMemberLegacy::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Teams\GetMembershipForUserLegacy::OPERATION_MATCH ? Schema\TeamMembership : ($call is Operation\Teams\AddOrUpdateMembershipForUserLegacy::OPERATION_MATCH ? Schema\TeamMembership : ($call is Operation\Teams\RemoveMembershipForUserLegacy::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Teams\ListProjectsLegacy::OPERATION_MATCH ? Schema\TeamProject : ($call is Operation\Teams\CheckPermissionsForProjectLegacy::OPERATION_MATCH ? Schema\TeamProject : ($call is Operation\Teams\AddOrUpdateProjectPermissionsLegacy::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Teams\RemoveProjectLegacy::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Teams\ListReposLegacy::OPERATION_MATCH ? Schema\MinimalRepository : ($call is Operation\Teams\CheckPermissionsForRepoLegacy::OPERATION_MATCH ? Schema\TeamRepository : ($call is Operation\Teams\AddOrUpdateRepoPermissionsLegacy::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Teams\RemoveRepoLegacy::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Teams\ListChildLegacy::OPERATION_MATCH ? Schema\Team : ($call is Operation\Users\GetAuthenticated::OPERATION_MATCH ? Schema\Operation\Users\GetAuthenticated\Response\Applicationjson\H200 : ($call is Operation\Users\UpdateAuthenticated::OPERATION_MATCH ? Schema\PrivateUser : ($call is Operation\Users\ListBlockedByAuthenticatedUser::OPERATION_MATCH ? Schema\SimpleUser : ($call is Operation\Users\CheckBlocked::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Users\Block::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Users\Unblock::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Codespaces\ListForAuthenticatedUser::OPERATION_MATCH ? Schema\Operation\Codespaces\ListInOrganization\Response\Applicationjson\H200 : ($call is Operation\Codespaces\CreateForAuthenticatedUser::OPERATION_MATCH ? Schema\Codespace : ($call is Operation\Codespaces\ListSecretsForAuthenticatedUser::OPERATION_MATCH ? Schema\Operation\Codespaces\ListSecretsForAuthenticatedUser\Response\Applicationjson\H200 : ($call is Operation\Codespaces\GetPublicKeyForAuthenticatedUser::OPERATION_MATCH ? Schema\CodespacesUserPublicKey : ($call is Operation\Codespaces\GetSecretForAuthenticatedUser::OPERATION_MATCH ? Schema\CodespacesSecret : ($call is Operation\Codespaces\CreateOrUpdateSecretForAuthenticatedUser::OPERATION_MATCH ? Schema\EmptyObject : ($call is Operation\Codespaces\DeleteSecretForAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Codespaces\ListRepositoriesForSecretForAuthenticatedUser::OPERATION_MATCH ? Schema\Operation\Actions\ListSelectedReposForOrgSecret\Response\Applicationjson\H200 : ($call is Operation\Codespaces\SetRepositoriesForSecretForAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Codespaces\AddRepositoryForSecretForAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Codespaces\RemoveRepositoryForSecretForAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Codespaces\GetForAuthenticatedUser::OPERATION_MATCH ? Schema\Codespace : ($call is Operation\Codespaces\DeleteForAuthenticatedUser::OPERATION_MATCH ? Schema\WebhookDeploymentCreated\Deployment\Payload : ($call is Operation\Codespaces\UpdateForAuthenticatedUser::OPERATION_MATCH ? Schema\Codespace : ($call is Operation\Codespaces\ExportForAuthenticatedUser::OPERATION_MATCH ? Schema\CodespaceExportDetails : ($call is Operation\Codespaces\GetExportDetailsForAuthenticatedUser::OPERATION_MATCH ? Schema\CodespaceExportDetails : ($call is Operation\Codespaces\CodespaceMachinesForAuthenticatedUser::OPERATION_MATCH ? Schema\Operation\Codespaces\RepoMachinesForAuthenticatedUser\Response\Applicationjson\H200 : ($call is Operation\Codespaces\PublishForAuthenticatedUser::OPERATION_MATCH ? Schema\CodespaceWithFullRepository : ($call is Operation\Codespaces\StartForAuthenticatedUser::OPERATION_MATCH ? Schema\Codespace : ($call is Operation\Codespaces\StopForAuthenticatedUser::OPERATION_MATCH ? Schema\Codespace : ($call is Operation\Packages\ListDockerMigrationConflictingPackagesForAuthenticatedUser::OPERATION_MATCH ? Schema\Package : ($call is Operation\Users\SetPrimaryEmailVisibilityForAuthenticatedUser::OPERATION_MATCH ? Schema\Email : ($call is Operation\Users\ListEmailsForAuthenticatedUser::OPERATION_MATCH ? Schema\Email : ($call is Operation\Users\AddEmailForAuthenticatedUser::OPERATION_MATCH ? Schema\Email : ($call is Operation\Users\DeleteEmailForAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Users\ListFollowersForAuthenticatedUser::OPERATION_MATCH ? Schema\SimpleUser : ($call is Operation\Users\ListFollowedByAuthenticatedUser::OPERATION_MATCH ? Schema\SimpleUser : ($call is Operation\Users\CheckPersonIsFollowedByAuthenticated::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Users\Follow::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Users\Unfollow::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Users\ListGpgKeysForAuthenticatedUser::OPERATION_MATCH ? Schema\GpgKey : ($call is Operation\Users\CreateGpgKeyForAuthenticatedUser::OPERATION_MATCH ? Schema\GpgKey : ($call is Operation\Users\GetGpgKeyForAuthenticatedUser::OPERATION_MATCH ? Schema\GpgKey : ($call is Operation\Users\DeleteGpgKeyForAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Apps\ListInstallationsForAuthenticatedUser::OPERATION_MATCH ? Schema\Operation\Orgs\ListAppInstallations\Response\Applicationjson\H200 : ($call is Operation\Apps\ListInstallationReposForAuthenticatedUser::OPERATION_MATCH ? Schema\Operation\Apps\ListInstallationReposForAuthenticatedUser\Response\Applicationjson\H200 : ($call is Operation\Apps\AddRepoToInstallationForAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Apps\RemoveRepoFromInstallationForAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Interactions\GetRestrictionsForAuthenticatedUser::OPERATION_MATCH ? Schema\Operation\Interactions\GetRestrictionsForOrg\Response\Applicationjson\H200 : ($call is Operation\Interactions\SetRestrictionsForAuthenticatedUser::OPERATION_MATCH ? Schema\InteractionLimitResponse : ($call is Operation\Interactions\RemoveRestrictionsForAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Issues\ListForAuthenticatedUser::OPERATION_MATCH ? Schema\Issue : ($call is Operation\Users\ListPublicSshKeysForAuthenticatedUser::OPERATION_MATCH ? Schema\Key : ($call is Operation\Users\CreatePublicSshKeyForAuthenticatedUser::OPERATION_MATCH ? Schema\Key : ($call is Operation\Users\GetPublicSshKeyForAuthenticatedUser::OPERATION_MATCH ? Schema\Key : ($call is Operation\Users\DeletePublicSshKeyForAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Apps\ListSubscriptionsForAuthenticatedUser::OPERATION_MATCH ? Schema\UserMarketplacePurchase : ($call is Operation\Apps\ListSubscriptionsForAuthenticatedUserStubbed::OPERATION_MATCH ? Schema\UserMarketplacePurchase : ($call is Operation\Orgs\ListMembershipsForAuthenticatedUser::OPERATION_MATCH ? Schema\OrgMembership : ($call is Operation\Orgs\GetMembershipForAuthenticatedUser::OPERATION_MATCH ? Schema\OrgMembership : ($call is Operation\Orgs\UpdateMembershipForAuthenticatedUser::OPERATION_MATCH ? Schema\OrgMembership : ($call is Operation\Migrations\ListForAuthenticatedUser::OPERATION_MATCH ? Schema\Migration : ($call is Operation\Migrations\StartForAuthenticatedUser::OPERATION_MATCH ? Schema\Migration : ($call is Operation\Migrations\GetStatusForAuthenticatedUser::OPERATION_MATCH ? Schema\Migration : ($call is Operation\Migrations\GetArchiveForAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Migrations\DeleteArchiveForAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Migrations\UnlockRepoForAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Migrations\ListReposForAuthenticatedUser::OPERATION_MATCH ? Schema\MinimalRepository : ($call is Operation\Orgs\ListForAuthenticatedUser::OPERATION_MATCH ? Schema\OrganizationSimple : ($call is Operation\Packages\ListPackagesForAuthenticatedUser::OPERATION_MATCH ? Schema\Package : ($call is Operation\Packages\GetPackageForAuthenticatedUser::OPERATION_MATCH ? Schema\Package : ($call is Operation\Packages\DeletePackageForAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Packages\RestorePackageForAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Packages\GetAllPackageVersionsForPackageOwnedByAuthenticatedUser::OPERATION_MATCH ? Schema\PackageVersion : ($call is Operation\Packages\GetPackageVersionForAuthenticatedUser::OPERATION_MATCH ? Schema\PackageVersion : ($call is Operation\Packages\DeletePackageVersionForAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Packages\RestorePackageVersionForAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Projects\CreateForAuthenticatedUser::OPERATION_MATCH ? Schema\Project : ($call is Operation\Users\ListPublicEmailsForAuthenticatedUser::OPERATION_MATCH ? Schema\Email : ($call is Operation\Repos\ListForAuthenticatedUser::OPERATION_MATCH ? Schema\Repository : ($call is Operation\Repos\CreateForAuthenticatedUser::OPERATION_MATCH ? Schema\Repository : ($call is Operation\Repos\ListInvitationsForAuthenticatedUser::OPERATION_MATCH ? Schema\RepositoryInvitation : ($call is Operation\Repos\DeclineInvitationForAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Repos\AcceptInvitationForAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Users\ListSocialAccountsForAuthenticatedUser::OPERATION_MATCH ? Schema\SocialAccount : ($call is Operation\Users\AddSocialAccountForAuthenticatedUser::OPERATION_MATCH ? Schema\SocialAccount : ($call is Operation\Users\DeleteSocialAccountForAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Users\ListSshSigningKeysForAuthenticatedUser::OPERATION_MATCH ? Schema\SshSigningKey : ($call is Operation\Users\CreateSshSigningKeyForAuthenticatedUser::OPERATION_MATCH ? Schema\SshSigningKey : ($call is Operation\Users\GetSshSigningKeyForAuthenticatedUser::OPERATION_MATCH ? Schema\SshSigningKey : ($call is Operation\Users\DeleteSshSigningKeyForAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Activity\ListReposStarredByAuthenticatedUser::OPERATION_MATCH ? Schema\Repository|Schema\StarredRepository : ($call is Operation\Activity\CheckRepoIsStarredByAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Activity\StarRepoForAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Activity\UnstarRepoForAuthenticatedUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Activity\ListWatchedReposForAuthenticatedUser::OPERATION_MATCH ? Schema\MinimalRepository : ($call is Operation\Teams\ListForAuthenticatedUser::OPERATION_MATCH ? Schema\TeamFull : ($call is Operation\Users\List_::OPERATION_MATCH ? Schema\SimpleUser : ($call is Operation\Users\GetByUsername::OPERATION_MATCH ? Schema\Operation\Users\GetAuthenticated\Response\Applicationjson\H200 : ($call is Operation\Packages\ListDockerMigrationConflictingPackagesForUser::OPERATION_MATCH ? Schema\Package : ($call is Operation\Activity\ListEventsForAuthenticatedUser::OPERATION_MATCH ? Schema\Event : ($call is Operation\Activity\ListOrgEventsForAuthenticatedUser::OPERATION_MATCH ? Schema\Event : ($call is Operation\Activity\ListPublicEventsForUser::OPERATION_MATCH ? Schema\Event : ($call is Operation\Users\ListFollowersForUser::OPERATION_MATCH ? Schema\SimpleUser : ($call is Operation\Users\ListFollowingForUser::OPERATION_MATCH ? Schema\SimpleUser : ($call is Operation\Users\CheckFollowingForUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Gists\ListForUser::OPERATION_MATCH ? Schema\BaseGist : ($call is Operation\Users\ListGpgKeysForUser::OPERATION_MATCH ? Schema\GpgKey : ($call is Operation\Users\GetContextForUser::OPERATION_MATCH ? Schema\Hovercard : ($call is Operation\Apps\GetUserInstallation::OPERATION_MATCH ? Schema\Installation : ($call is Operation\Users\ListPublicKeysForUser::OPERATION_MATCH ? Schema\KeySimple : ($call is Operation\Orgs\ListForUser::OPERATION_MATCH ? Schema\OrganizationSimple : ($call is Operation\Packages\ListPackagesForUser::OPERATION_MATCH ? Schema\Package : ($call is Operation\Packages\GetPackageForUser::OPERATION_MATCH ? Schema\Package : ($call is Operation\Packages\DeletePackageForUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Packages\RestorePackageForUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Packages\GetAllPackageVersionsForPackageOwnedByUser::OPERATION_MATCH ? Schema\PackageVersion : ($call is Operation\Packages\GetPackageVersionForUser::OPERATION_MATCH ? Schema\PackageVersion : ($call is Operation\Packages\DeletePackageVersionForUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Packages\RestorePackageVersionForUser::OPERATION_MATCH ? \Psr\Http\Message\ResponseInterface : ($call is Operation\Projects\ListForUser::OPERATION_MATCH ? Schema\Project : ($call is Operation\Activity\ListReceivedEventsForUser::OPERATION_MATCH ? Schema\Event : ($call is Operation\Activity\ListReceivedPublicEventsForUser::OPERATION_MATCH ? Schema\Event : ($call is Operation\Repos\ListForUser::OPERATION_MATCH ? Schema\MinimalRepository : ($call is Operation\Billing\GetGithubActionsBillingUser::OPERATION_MATCH ? Schema\ActionsBillingUsage : ($call is Operation\Billing\GetGithubPackagesBillingUser::OPERATION_MATCH ? Schema\PackagesBillingUsage : ($call is Operation\Billing\GetSharedStorageBillingUser::OPERATION_MATCH ? Schema\CombinedBillingUsage : ($call is Operation\Users\ListSocialAccountsForUser::OPERATION_MATCH ? Schema\SocialAccount : ($call is Operation\Users\ListSshSigningKeysForUser::OPERATION_MATCH ? Schema\SshSigningKey : ($call is Operation\Activity\ListReposStarredByUser::OPERATION_MATCH ? Schema\Operation\Activity\ListReposStarredByUser\Response\Applicationjson\H200 : ($call is Operation\Activity\ListReposWatchedByUser::OPERATION_MATCH ? Schema\MinimalRepository : ($call is Operation\Meta\GetAllVersions::OPERATION_MATCH ? Schema\Operation\Meta\GetAllVersions\Response\Applicationjson\H200 : Schema\WebHookHeader\UserAgent
     */
    public function call(string $call, array $params = array());
    /**
     * @return ($call is Operation\Meta\Root::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Root> : ($call is Operation\Apps\GetAuthenticated::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Integration> : ($call is Operation\Apps\CreateFromManifest::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Apps\CreateFromManifest\Response\Applicationjson\H201> : ($call is Operation\Apps\GetWebhookConfigForApp::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WebhookConfig> : ($call is Operation\Apps\UpdateWebhookConfigForApp::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WebhookConfig> : ($call is Operation\Apps\ListWebhookDeliveries::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\HookDeliveryItem> : ($call is Operation\Apps\GetWebhookDelivery::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\HookDelivery> : ($call is Operation\Apps\RedeliverWebhookDelivery::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WebhookDeploymentCreated\Deployment\Payload> : ($call is Operation\Apps\ListInstallationRequestsForAuthenticatedApp::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\IntegrationInstallationRequest> : ($call is Operation\Apps\ListInstallations::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Installation> : ($call is Operation\Apps\GetInstallation::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Installation> : ($call is Operation\Apps\DeleteInstallation::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Apps\CreateInstallationAccessToken::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\InstallationToken> : ($call is Operation\Apps\SuspendInstallation::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Apps\UnsuspendInstallation::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Apps\DeleteAuthorization::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Apps\CheckToken::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Authorization> : ($call is Operation\Apps\DeleteToken::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Apps\ResetToken::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Authorization> : ($call is Operation\Apps\ScopeToken::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Authorization> : ($call is Operation\Apps\GetBySlug::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Integration> : ($call is Operation\CodesOfConduct\GetAllCodesOfConduct::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CodeOfConduct> : ($call is Operation\CodesOfConduct\GetConductCode::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CodeOfConduct> : ($call is Operation\Emojis\Get::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrganizationProgrammaticAccessGrantRequest\Permissions\Organization> : ($call is Operation\Dependabot\ListAlertsForEnterprise::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\DependabotAlertWithRepository> : ($call is Operation\SecretScanning\ListAlertsForEnterprise::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrganizationSecretScanningAlert> : ($call is Operation\Activity\ListPublicEvents::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Event> : ($call is Operation\Activity\GetFeeds::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Feed> : ($call is Operation\Gists\List_::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\BaseGist> : ($call is Operation\Gists\Create::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\GistSimple> : ($call is Operation\Gists\ListPublic::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\BaseGist> : ($call is Operation\Gists\ListStarred::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\BaseGist> : ($call is Operation\Gists\Get::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\GistSimple> : ($call is Operation\Gists\Delete::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Gists\Update::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\GistSimple> : ($call is Operation\Gists\ListComments::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\GistComment> : ($call is Operation\Gists\CreateComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\GistComment> : ($call is Operation\Gists\GetComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\GistComment> : ($call is Operation\Gists\DeleteComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Gists\UpdateComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\GistComment> : ($call is Operation\Gists\ListCommits::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\GistCommit> : ($call is Operation\Gists\ListForks::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\GistSimple> : ($call is Operation\Gists\Fork::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\BaseGist> : ($call is Operation\Gists\CheckIsStarred::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Gists\Star::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Gists\Unstar::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Gists\GetRevision::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\GistSimple> : ($call is Operation\Gitignore\GetAllTemplates::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WebHookHeader\UserAgent> : ($call is Operation\Gitignore\GetTemplate::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\GitignoreTemplate> : ($call is Operation\Apps\ListReposAccessibleToInstallation::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Apps\ListReposAccessibleToInstallation\Response\Applicationjson\H200> : ($call is Operation\Apps\RevokeInstallationAccessToken::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Issues\List_::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Issue> : ($call is Operation\Licenses\GetAllCommonlyUsed::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\LicenseSimple> : ($call is Operation\Licenses\Get::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\License> : ($call is Operation\Markdown\Render::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WebHookHeader\UserAgent> : ($call is Operation\Markdown\RenderRaw::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WebHookHeader\UserAgent> : ($call is Operation\Apps\GetSubscriptionPlanForAccount::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\MarketplacePurchase> : ($call is Operation\Apps\ListPlans::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\MarketplaceListingPlan> : ($call is Operation\Apps\ListAccountsForPlan::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\MarketplacePurchase> : ($call is Operation\Apps\GetSubscriptionPlanForAccountStubbed::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\MarketplacePurchase> : ($call is Operation\Apps\ListPlansStubbed::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\MarketplaceListingPlan> : ($call is Operation\Apps\ListAccountsForPlanStubbed::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\MarketplacePurchase> : ($call is Operation\Meta\Get::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ApiOverview> : ($call is Operation\Activity\ListPublicEventsForRepoNetwork::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Event|Schema\BasicError> : ($call is Operation\Activity\ListNotificationsForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Thread> : ($call is Operation\Activity\MarkNotificationsAsRead::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Activity\MarkNotificationsAsRead\Response\Applicationjson\H202> : ($call is Operation\Activity\GetThread::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Thread> : ($call is Operation\Activity\MarkThreadAsRead::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Activity\GetThreadSubscriptionForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ThreadSubscription> : ($call is Operation\Activity\SetThreadSubscription::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ThreadSubscription> : ($call is Operation\Activity\DeleteThreadSubscription::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Meta\GetOctocat::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WebHookHeader\UserAgent> : ($call is Operation\Orgs\List_::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrganizationSimple> : ($call is Operation\Orgs\ListPatGrantRequests::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrganizationProgrammaticAccessGrantRequest> : ($call is Operation\Orgs\ReviewPatGrantRequestsInBulk::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WebhookDeploymentCreated\Deployment\Payload> : ($call is Operation\Orgs\ReviewPatGrantRequest::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Orgs\ListPatGrantRequestRepositories::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\MinimalRepository> : ($call is Operation\Orgs\ListPatGrants::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrganizationProgrammaticAccessGrant> : ($call is Operation\Orgs\UpdatePatAccesses::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WebhookDeploymentCreated\Deployment\Payload> : ($call is Operation\Orgs\UpdatePatAccess::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Orgs\ListPatGrantRepositories::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\MinimalRepository> : ($call is Operation\Orgs\Get::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrganizationFull> : ($call is Operation\Orgs\Update::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrganizationFull> : ($call is Operation\Actions\GetActionsCacheUsageForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ActionsCacheUsageOrgEnterprise> : ($call is Operation\Actions\GetActionsCacheUsageByRepoForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\GetActionsCacheUsageByRepoForOrg\Response\Applicationjson\H200> : ($call is Operation\Oidc\GetOidcCustomSubTemplateForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OidcCustomSub> : ($call is Operation\Oidc\UpdateOidcCustomSubTemplateForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\EmptyObject> : ($call is Operation\Actions\GetGithubActionsPermissionsOrganization::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ActionsOrganizationPermissions> : ($call is Operation\Actions\SetGithubActionsPermissionsOrganization::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\ListSelectedRepositoriesEnabledGithubActionsOrganization::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListSelectedRepositoriesEnabledGithubActionsOrganization\Response\Applicationjson\H200> : ($call is Operation\Actions\SetSelectedRepositoriesEnabledGithubActionsOrganization::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\EnableSelectedRepositoryGithubActionsOrganization::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\DisableSelectedRepositoryGithubActionsOrganization::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\GetAllowedActionsOrganization::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SelectedActions> : ($call is Operation\Actions\SetAllowedActionsOrganization::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\GetGithubActionsDefaultWorkflowPermissionsOrganization::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ActionsGetDefaultWorkflowPermissions> : ($call is Operation\Actions\SetGithubActionsDefaultWorkflowPermissionsOrganization::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\ListRequiredWorkflows::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListRequiredWorkflows\Response\Applicationjson\H200> : ($call is Operation\Actions\CreateRequiredWorkflow::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\RequiredWorkflow> : ($call is Operation\Actions\GetRequiredWorkflow::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\RequiredWorkflow> : ($call is Operation\Actions\DeleteRequiredWorkflow::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\UpdateRequiredWorkflow::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\RequiredWorkflow> : ($call is Operation\Actions\ListSelectedRepositoriesRequiredWorkflow::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListSelectedRepositoriesEnabledGithubActionsOrganization\Response\Applicationjson\H200> : ($call is Operation\Actions\SetSelectedReposToRequiredWorkflow::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\AddSelectedRepoToRequiredWorkflow::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\RemoveSelectedRepoFromRequiredWorkflow::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\ListSelfHostedRunnersForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListSelfHostedRunnersForOrg\Response\Applicationjson\H200> : ($call is Operation\Actions\ListRunnerApplicationsForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\RunnerApplication> : ($call is Operation\Actions\CreateRegistrationTokenForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\AuthenticationToken> : ($call is Operation\Actions\CreateRemoveTokenForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\AuthenticationToken> : ($call is Operation\Actions\GetSelfHostedRunnerForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Runner> : ($call is Operation\Actions\DeleteSelfHostedRunnerFromOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\ListLabelsForSelfHostedRunnerForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListLabelsForSelfHostedRunnerForOrg\Response\Applicationjson\H200> : ($call is Operation\Actions\SetCustomLabelsForSelfHostedRunnerForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListLabelsForSelfHostedRunnerForOrg\Response\Applicationjson\H200> : ($call is Operation\Actions\AddCustomLabelsToSelfHostedRunnerForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListLabelsForSelfHostedRunnerForOrg\Response\Applicationjson\H200> : ($call is Operation\Actions\RemoveAllCustomLabelsFromSelfHostedRunnerForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListLabelsForSelfHostedRunnerForOrg\Response\Applicationjson\H200> : ($call is Operation\Actions\RemoveCustomLabelFromSelfHostedRunnerForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListLabelsForSelfHostedRunnerForOrg\Response\Applicationjson\H200> : ($call is Operation\Actions\ListOrgSecrets::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListOrgSecrets\Response\Applicationjson\H200> : ($call is Operation\Actions\GetOrgPublicKey::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ActionsPublicKey> : ($call is Operation\Actions\GetOrgSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrganizationActionsSecret> : ($call is Operation\Actions\CreateOrUpdateOrgSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\EmptyObject> : ($call is Operation\Actions\DeleteOrgSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\ListSelectedReposForOrgSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListSelectedReposForOrgSecret\Response\Applicationjson\H200> : ($call is Operation\Actions\SetSelectedReposForOrgSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\AddSelectedRepoToOrgSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\RemoveSelectedRepoFromOrgSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\ListOrgVariables::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListOrgVariables\Response\Applicationjson\H200> : ($call is Operation\Actions\CreateOrgVariable::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\EmptyObject> : ($call is Operation\Actions\GetOrgVariable::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrganizationActionsVariable> : ($call is Operation\Actions\DeleteOrgVariable::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\UpdateOrgVariable::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\ListSelectedReposForOrgVariable::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListSelectedReposForOrgSecret\Response\Applicationjson\H200> : ($call is Operation\Actions\SetSelectedReposForOrgVariable::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\AddSelectedRepoToOrgVariable::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\RemoveSelectedRepoFromOrgVariable::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Orgs\ListBlockedUsers::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SimpleUser> : ($call is Operation\Orgs\CheckBlockedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Orgs\BlockUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Orgs\UnblockUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\CodeScanning\ListAlertsForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CodeScanningOrganizationAlertItems> : ($call is Operation\Codespaces\ListInOrganization::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Codespaces\ListInOrganization\Response\Applicationjson\H200> : ($call is Operation\Codespaces\SetCodespacesBilling::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Codespaces\SetCodespacesBillingUsers::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Codespaces\DeleteCodespacesBillingUsers::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Codespaces\ListOrgSecrets::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Codespaces\ListOrgSecrets\Response\Applicationjson\H200> : ($call is Operation\Codespaces\GetOrgPublicKey::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CodespacesPublicKey> : ($call is Operation\Codespaces\GetOrgSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CodespacesOrgSecret> : ($call is Operation\Codespaces\CreateOrUpdateOrgSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\EmptyObject> : ($call is Operation\Codespaces\DeleteOrgSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Codespaces\ListSelectedReposForOrgSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListSelectedReposForOrgSecret\Response\Applicationjson\H200> : ($call is Operation\Codespaces\SetSelectedReposForOrgSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Codespaces\AddSelectedRepoToOrgSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Codespaces\RemoveSelectedRepoFromOrgSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Dependabot\ListAlertsForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\DependabotAlertWithRepository> : ($call is Operation\Dependabot\ListOrgSecrets::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Dependabot\ListOrgSecrets\Response\Applicationjson\H200> : ($call is Operation\Dependabot\GetOrgPublicKey::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\DependabotPublicKey> : ($call is Operation\Dependabot\GetOrgSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrganizationDependabotSecret> : ($call is Operation\Dependabot\CreateOrUpdateOrgSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\EmptyObject> : ($call is Operation\Dependabot\DeleteOrgSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Dependabot\ListSelectedReposForOrgSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListSelectedReposForOrgSecret\Response\Applicationjson\H200> : ($call is Operation\Dependabot\SetSelectedReposForOrgSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Dependabot\AddSelectedRepoToOrgSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Dependabot\RemoveSelectedRepoFromOrgSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Packages\ListDockerMigrationConflictingPackagesForOrganization::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Package> : ($call is Operation\Activity\ListPublicOrgEvents::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Event> : ($call is Operation\Orgs\ListFailedInvitations::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrganizationInvitation> : ($call is Operation\Orgs\ListWebhooks::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrgHook> : ($call is Operation\Orgs\CreateWebhook::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrgHook> : ($call is Operation\Orgs\GetWebhook::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrgHook> : ($call is Operation\Orgs\DeleteWebhook::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Orgs\UpdateWebhook::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrgHook> : ($call is Operation\Orgs\GetWebhookConfigForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WebhookConfig> : ($call is Operation\Orgs\UpdateWebhookConfigForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WebhookConfig> : ($call is Operation\Orgs\ListWebhookDeliveries::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\HookDeliveryItem> : ($call is Operation\Orgs\GetWebhookDelivery::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\HookDelivery> : ($call is Operation\Orgs\RedeliverWebhookDelivery::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WebhookDeploymentCreated\Deployment\Payload> : ($call is Operation\Orgs\PingWebhook::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Apps\GetOrgInstallation::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Installation> : ($call is Operation\Orgs\ListAppInstallations::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Orgs\ListAppInstallations\Response\Applicationjson\H200> : ($call is Operation\Interactions\GetRestrictionsForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Interactions\GetRestrictionsForOrg\Response\Applicationjson\H200> : ($call is Operation\Interactions\SetRestrictionsForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\InteractionLimitResponse> : ($call is Operation\Interactions\RemoveRestrictionsForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Orgs\ListPendingInvitations::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrganizationInvitation> : ($call is Operation\Orgs\CreateInvitation::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrganizationInvitation> : ($call is Operation\Orgs\CancelInvitation::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Orgs\ListInvitationTeams::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Team> : ($call is Operation\Issues\ListForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Issue> : ($call is Operation\Orgs\ListMembers::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SimpleUser> : ($call is Operation\Orgs\CheckMembershipForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Orgs\RemoveMember::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Codespaces\GetCodespacesForUserInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Codespaces\ListInOrganization\Response\Applicationjson\H200> : ($call is Operation\Codespaces\DeleteFromOrganization::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WebhookDeploymentCreated\Deployment\Payload> : ($call is Operation\Codespaces\StopInOrganization::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Codespace> : ($call is Operation\Orgs\GetMembershipForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrgMembership> : ($call is Operation\Orgs\SetMembershipForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrgMembership> : ($call is Operation\Orgs\RemoveMembershipForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Migrations\ListForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Migration> : ($call is Operation\Migrations\StartForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Migration> : ($call is Operation\Migrations\GetStatusForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Migration> : ($call is Operation\Migrations\DownloadArchiveForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Migrations\DownloadArchiveForOrgStreaming::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Rx\Observable<string>|\Psr\Http\Message\ResponseInterface> : ($call is Operation\Migrations\DeleteArchiveForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Migrations\UnlockRepoForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Migrations\ListReposForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\MinimalRepository> : ($call is Operation\Orgs\ListOutsideCollaborators::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SimpleUser> : ($call is Operation\Orgs\ConvertMemberToOutsideCollaborator::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Gists\CheckIsStarred\Response\Applicationjson\H404> : ($call is Operation\Orgs\RemoveOutsideCollaborator::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Packages\ListPackagesForOrganization::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Package> : ($call is Operation\Packages\GetPackageForOrganization::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Package> : ($call is Operation\Packages\DeletePackageForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Packages\RestorePackageForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Packages\GetAllPackageVersionsForPackageOwnedByOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PackageVersion> : ($call is Operation\Packages\GetPackageVersionForOrganization::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PackageVersion> : ($call is Operation\Packages\DeletePackageVersionForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Packages\RestorePackageVersionForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Projects\ListForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Project> : ($call is Operation\Projects\CreateForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Project> : ($call is Operation\Orgs\ListPublicMembers::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SimpleUser> : ($call is Operation\Orgs\CheckPublicMembershipForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Orgs\SetPublicMembershipForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Orgs\RemovePublicMembershipForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\ListForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\MinimalRepository> : ($call is Operation\Repos\CreateInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Repository> : ($call is Operation\SecretScanning\ListAlertsForOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrganizationSecretScanningAlert> : ($call is Operation\Orgs\ListSecurityManagerTeams::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamSimple> : ($call is Operation\Orgs\AddSecurityManagerTeam::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Orgs\RemoveSecurityManagerTeam::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Billing\GetGithubActionsBillingOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ActionsBillingUsage> : ($call is Operation\Billing\GetGithubPackagesBillingOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PackagesBillingUsage> : ($call is Operation\Billing\GetSharedStorageBillingOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CombinedBillingUsage> : ($call is Operation\Teams\List_::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Team> : ($call is Operation\Teams\Create::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamFull> : ($call is Operation\Teams\GetByName::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamFull> : ($call is Operation\Teams\DeleteInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Teams\UpdateInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamFull> : ($call is Operation\Teams\ListDiscussionsInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamDiscussion> : ($call is Operation\Teams\CreateDiscussionInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamDiscussion> : ($call is Operation\Teams\GetDiscussionInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamDiscussion> : ($call is Operation\Teams\DeleteDiscussionInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Teams\UpdateDiscussionInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamDiscussion> : ($call is Operation\Teams\ListDiscussionCommentsInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamDiscussionComment> : ($call is Operation\Teams\CreateDiscussionCommentInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamDiscussionComment> : ($call is Operation\Teams\GetDiscussionCommentInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamDiscussionComment> : ($call is Operation\Teams\DeleteDiscussionCommentInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Teams\UpdateDiscussionCommentInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamDiscussionComment> : ($call is Operation\Reactions\ListForTeamDiscussionCommentInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Reaction> : ($call is Operation\Reactions\CreateForTeamDiscussionCommentInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Reaction> : ($call is Operation\Reactions\DeleteForTeamDiscussionComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Reactions\ListForTeamDiscussionInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Reaction> : ($call is Operation\Reactions\CreateForTeamDiscussionInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Reaction> : ($call is Operation\Reactions\DeleteForTeamDiscussion::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Teams\ListPendingInvitationsInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrganizationInvitation> : ($call is Operation\Teams\ListMembersInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SimpleUser> : ($call is Operation\Teams\GetMembershipForUserInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamMembership> : ($call is Operation\Teams\AddOrUpdateMembershipForUserInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamMembership> : ($call is Operation\Teams\RemoveMembershipForUserInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Teams\ListProjectsInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamProject> : ($call is Operation\Teams\CheckPermissionsForProjectInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamProject> : ($call is Operation\Teams\AddOrUpdateProjectPermissionsInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Teams\RemoveProjectInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Teams\ListReposInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\MinimalRepository> : ($call is Operation\Teams\CheckPermissionsForRepoInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamRepository> : ($call is Operation\Teams\AddOrUpdateRepoPermissionsInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Teams\RemoveRepoInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Teams\ListChildInOrg::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Team> : ($call is Operation\Orgs\EnableOrDisableSecurityProductOnAllOrgRepos::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Projects\GetCard::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ProjectCard> : ($call is Operation\Projects\DeleteCard::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Projects\UpdateCard::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ProjectCard> : ($call is Operation\Projects\MoveCard::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Gists\CheckIsStarred\Response\Applicationjson\H404> : ($call is Operation\Projects\GetColumn::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ProjectColumn> : ($call is Operation\Projects\DeleteColumn::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Projects\UpdateColumn::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ProjectColumn> : ($call is Operation\Projects\ListCards::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ProjectCard> : ($call is Operation\Projects\CreateCard::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ProjectCard> : ($call is Operation\Projects\MoveColumn::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Gists\CheckIsStarred\Response\Applicationjson\H404> : ($call is Operation\Projects\Get::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Project> : ($call is Operation\Projects\Delete::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Projects\Update::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Project> : ($call is Operation\Projects\ListCollaborators::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SimpleUser> : ($call is Operation\Projects\AddCollaborator::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Projects\RemoveCollaborator::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Projects\GetPermissionForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ProjectCollaboratorPermission> : ($call is Operation\Projects\ListColumns::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ProjectColumn> : ($call is Operation\Projects\CreateColumn::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ProjectColumn> : ($call is Operation\RateLimit\Get::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\RateLimitOverview> : ($call is Operation\Actions\ListRepoRequiredWorkflows::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListRepoRequiredWorkflows\Response\Applicationjson\H200> : ($call is Operation\Actions\GetRepoRequiredWorkflow::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\RepoRequiredWorkflow> : ($call is Operation\Actions\GetRepoRequiredWorkflowUsage::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WorkflowUsage> : ($call is Operation\Repos\Get::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\FullRepository|Schema\BasicError> : ($call is Operation\Repos\Delete::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\BasicError> : ($call is Operation\Repos\Update::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\FullRepository|Schema\BasicError> : ($call is Operation\Actions\ListArtifactsForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListArtifactsForRepo\Response\Applicationjson\H200> : ($call is Operation\Actions\GetArtifact::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Artifact> : ($call is Operation\Actions\DeleteArtifact::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\DownloadArtifact::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\DownloadArtifactStreaming::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Rx\Observable<string>|\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\GetActionsCacheUsage::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ActionsCacheUsageByRepository> : ($call is Operation\Actions\GetActionsCacheList::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ActionsCacheList> : ($call is Operation\Actions\DeleteActionsCacheByKey::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ActionsCacheList> : ($call is Operation\Actions\DeleteActionsCacheById::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\GetJobForWorkflowRun::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Job> : ($call is Operation\Actions\DownloadJobLogsForWorkflowRun::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\DownloadJobLogsForWorkflowRunStreaming::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Rx\Observable<string>|\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\ReRunJobForWorkflowRun::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\EmptyObject> : ($call is Operation\Actions\GetCustomOidcSubClaimForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OidcCustomSubRepo> : ($call is Operation\Actions\SetCustomOidcSubClaimForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\EmptyObject> : ($call is Operation\Actions\ListRepoOrganizationSecrets::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListRepoOrganizationSecrets\Response\Applicationjson\H200> : ($call is Operation\Actions\ListRepoOrganizationVariables::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListRepoOrganizationVariables\Response\Applicationjson\H200> : ($call is Operation\Actions\GetGithubActionsPermissionsRepository::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ActionsRepositoryPermissions> : ($call is Operation\Actions\SetGithubActionsPermissionsRepository::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\GetWorkflowAccessToRepository::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ActionsWorkflowAccessToRepository> : ($call is Operation\Actions\SetWorkflowAccessToRepository::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\GetAllowedActionsRepository::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SelectedActions> : ($call is Operation\Actions\SetAllowedActionsRepository::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\GetGithubActionsDefaultWorkflowPermissionsRepository::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ActionsGetDefaultWorkflowPermissions> : ($call is Operation\Actions\SetGithubActionsDefaultWorkflowPermissionsRepository::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\ListRequiredWorkflowRuns::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListRequiredWorkflowRuns\Response\Applicationjson\H200> : ($call is Operation\Actions\ListSelfHostedRunnersForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListSelfHostedRunnersForOrg\Response\Applicationjson\H200> : ($call is Operation\Actions\ListRunnerApplicationsForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\RunnerApplication> : ($call is Operation\Actions\CreateRegistrationTokenForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\AuthenticationToken> : ($call is Operation\Actions\CreateRemoveTokenForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\AuthenticationToken> : ($call is Operation\Actions\GetSelfHostedRunnerForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Runner> : ($call is Operation\Actions\DeleteSelfHostedRunnerFromRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\ListLabelsForSelfHostedRunnerForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListLabelsForSelfHostedRunnerForOrg\Response\Applicationjson\H200> : ($call is Operation\Actions\SetCustomLabelsForSelfHostedRunnerForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListLabelsForSelfHostedRunnerForOrg\Response\Applicationjson\H200> : ($call is Operation\Actions\AddCustomLabelsToSelfHostedRunnerForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListLabelsForSelfHostedRunnerForOrg\Response\Applicationjson\H200> : ($call is Operation\Actions\RemoveAllCustomLabelsFromSelfHostedRunnerForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListLabelsForSelfHostedRunnerForOrg\Response\Applicationjson\H200> : ($call is Operation\Actions\RemoveCustomLabelFromSelfHostedRunnerForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListLabelsForSelfHostedRunnerForOrg\Response\Applicationjson\H200> : ($call is Operation\Actions\ListWorkflowRunsForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListRequiredWorkflowRuns\Response\Applicationjson\H200> : ($call is Operation\Actions\GetWorkflowRun::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WorkflowRun> : ($call is Operation\Actions\DeleteWorkflowRun::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\GetReviewsForRun::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\EnvironmentApprovals> : ($call is Operation\Actions\ApproveWorkflowRun::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\EmptyObject> : ($call is Operation\Actions\ListWorkflowRunArtifacts::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListArtifactsForRepo\Response\Applicationjson\H200> : ($call is Operation\Actions\GetWorkflowRunAttempt::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WorkflowRun> : ($call is Operation\Actions\ListJobsForWorkflowRunAttempt::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListJobsForWorkflowRunAttempt\Response\Applicationjson\H200> : ($call is Operation\Actions\DownloadWorkflowRunAttemptLogs::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\DownloadWorkflowRunAttemptLogsStreaming::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Rx\Observable<string>|\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\CancelWorkflowRun::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\EmptyObject> : ($call is Operation\Actions\ListJobsForWorkflowRun::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListJobsForWorkflowRunAttempt\Response\Applicationjson\H200> : ($call is Operation\Actions\DownloadWorkflowRunLogs::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\DownloadWorkflowRunLogsStreaming::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Rx\Observable<string>|\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\DeleteWorkflowRunLogs::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\GetPendingDeploymentsForRun::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PendingDeployment> : ($call is Operation\Actions\ReviewPendingDeploymentsForRun::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Deployment> : ($call is Operation\Actions\ReRunWorkflow::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\EmptyObject> : ($call is Operation\Actions\ReRunWorkflowFailedJobs::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\EmptyObject> : ($call is Operation\Actions\GetWorkflowRunUsage::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WorkflowRunUsage> : ($call is Operation\Actions\ListRepoSecrets::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListRepoOrganizationSecrets\Response\Applicationjson\H200> : ($call is Operation\Actions\GetRepoPublicKey::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ActionsPublicKey> : ($call is Operation\Actions\GetRepoSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ActionsSecret> : ($call is Operation\Actions\CreateOrUpdateRepoSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\EmptyObject> : ($call is Operation\Actions\DeleteRepoSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\ListRepoVariables::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListRepoOrganizationVariables\Response\Applicationjson\H200> : ($call is Operation\Actions\CreateRepoVariable::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\EmptyObject> : ($call is Operation\Actions\GetRepoVariable::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ActionsVariable> : ($call is Operation\Actions\DeleteRepoVariable::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\UpdateRepoVariable::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\ListRepoWorkflows::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListRepoWorkflows\Response\Applicationjson\H200> : ($call is Operation\Actions\GetWorkflow::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Workflow> : ($call is Operation\Actions\DisableWorkflow::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\CreateWorkflowDispatch::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\EnableWorkflow::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\ListWorkflowRuns::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListRequiredWorkflowRuns\Response\Applicationjson\H200> : ($call is Operation\Actions\GetWorkflowUsage::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WorkflowUsage> : ($call is Operation\Issues\ListAssignees::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SimpleUser> : ($call is Operation\Issues\CheckUserCanBeAssigned::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\ListAutolinks::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Autolink> : ($call is Operation\Repos\CreateAutolink::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Autolink> : ($call is Operation\Repos\GetAutolink::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Autolink> : ($call is Operation\Repos\DeleteAutolink::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\EnableAutomatedSecurityFixes::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\DisableAutomatedSecurityFixes::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\ListBranches::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ShortBranch> : ($call is Operation\Repos\GetBranch::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\BranchWithProtection|Schema\BasicError> : ($call is Operation\Repos\GetBranchProtection::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\BranchProtection> : ($call is Operation\Repos\UpdateBranchProtection::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ProtectedBranch> : ($call is Operation\Repos\DeleteBranchProtection::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\GetAdminBranchProtection::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ProtectedBranchAdminEnforced> : ($call is Operation\Repos\SetAdminBranchProtection::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ProtectedBranchAdminEnforced> : ($call is Operation\Repos\DeleteAdminBranchProtection::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\GetPullRequestReviewProtection::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ProtectedBranchPullRequestReview> : ($call is Operation\Repos\DeletePullRequestReviewProtection::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\UpdatePullRequestReviewProtection::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ProtectedBranchPullRequestReview> : ($call is Operation\Repos\GetCommitSignatureProtection::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ProtectedBranchAdminEnforced> : ($call is Operation\Repos\CreateCommitSignatureProtection::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ProtectedBranchAdminEnforced> : ($call is Operation\Repos\DeleteCommitSignatureProtection::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\GetStatusChecksProtection::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\StatusCheckPolicy> : ($call is Operation\Repos\RemoveStatusCheckProtection::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\UpdateStatusCheckProtection::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\StatusCheckPolicy> : ($call is Operation\Repos\GetAllStatusCheckContexts::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WebHookHeader\UserAgent> : ($call is Operation\Repos\SetStatusCheckContexts::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WebHookHeader\UserAgent> : ($call is Operation\Repos\AddStatusCheckContexts::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WebHookHeader\UserAgent> : ($call is Operation\Repos\RemoveStatusCheckContexts::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WebHookHeader\UserAgent> : ($call is Operation\Repos\GetAccessRestrictions::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\BranchRestrictionPolicy> : ($call is Operation\Repos\DeleteAccessRestrictions::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\GetAppsWithAccessToProtectedBranch::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Integration> : ($call is Operation\Repos\SetAppAccessRestrictions::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Integration> : ($call is Operation\Repos\AddAppAccessRestrictions::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Integration> : ($call is Operation\Repos\RemoveAppAccessRestrictions::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Integration> : ($call is Operation\Repos\GetTeamsWithAccessToProtectedBranch::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Team> : ($call is Operation\Repos\SetTeamAccessRestrictions::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Team> : ($call is Operation\Repos\AddTeamAccessRestrictions::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Team> : ($call is Operation\Repos\RemoveTeamAccessRestrictions::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Team> : ($call is Operation\Repos\GetUsersWithAccessToProtectedBranch::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SimpleUser> : ($call is Operation\Repos\SetUserAccessRestrictions::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SimpleUser> : ($call is Operation\Repos\AddUserAccessRestrictions::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SimpleUser> : ($call is Operation\Repos\RemoveUserAccessRestrictions::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SimpleUser> : ($call is Operation\Repos\RenameBranch::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\BranchWithProtection> : ($call is Operation\Checks\Create::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CheckRun> : ($call is Operation\Checks\Get::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CheckRun> : ($call is Operation\Checks\Update::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CheckRun> : ($call is Operation\Checks\ListAnnotations::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CheckAnnotation> : ($call is Operation\Checks\RerequestRun::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\EmptyObject> : ($call is Operation\Checks\CreateSuite::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CheckSuite> : ($call is Operation\Checks\SetSuitesPreferences::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CheckSuitePreference> : ($call is Operation\Checks\GetSuite::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CheckSuite> : ($call is Operation\Checks\ListForSuite::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Checks\ListForSuite\Response\Applicationjson\H200> : ($call is Operation\Checks\RerequestSuite::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\EmptyObject> : ($call is Operation\CodeScanning\ListAlertsForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CodeScanningAlertItems> : ($call is Operation\CodeScanning\GetAlert::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CodeScanningAlert> : ($call is Operation\CodeScanning\UpdateAlert::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CodeScanningAlert> : ($call is Operation\CodeScanning\ListAlertInstances::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CodeScanningAlertInstance> : ($call is Operation\CodeScanning\ListRecentAnalyses::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CodeScanningAnalysis> : ($call is Operation\CodeScanning\GetAnalysis::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CodeScanningAnalysis|Schema\Deployment\Payload> : ($call is Operation\CodeScanning\DeleteAnalysis::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CodeScanningAnalysisDeletion> : ($call is Operation\CodeScanning\ListCodeqlDatabases::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CodeScanningCodeqlDatabase> : ($call is Operation\CodeScanning\GetCodeqlDatabase::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CodeScanningCodeqlDatabase> : ($call is Operation\CodeScanning\GetDefaultSetup::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CodeScanningDefaultSetup> : ($call is Operation\CodeScanning\UpdateDefaultSetup::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\EmptyObject|Schema\CodeScanningDefaultSetupUpdateResponse> : ($call is Operation\CodeScanning\UploadSarif::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CodeScanningSarifsReceipt> : ($call is Operation\CodeScanning\GetSarif::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CodeScanningSarifsStatus> : ($call is Operation\Repos\CodeownersErrors::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CodeownersErrors> : ($call is Operation\Codespaces\ListInRepositoryForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Codespaces\ListInOrganization\Response\Applicationjson\H200> : ($call is Operation\Codespaces\CreateWithRepoForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Codespace> : ($call is Operation\Codespaces\ListDevcontainersInRepositoryForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Codespaces\ListDevcontainersInRepositoryForAuthenticatedUser\Response\Applicationjson\H200> : ($call is Operation\Codespaces\RepoMachinesForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Codespaces\RepoMachinesForAuthenticatedUser\Response\Applicationjson\H200> : ($call is Operation\Codespaces\PreFlightWithRepoForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Codespaces\PreFlightWithRepoForAuthenticatedUser\Response\Applicationjson\H200> : ($call is Operation\Codespaces\ListRepoSecrets::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Codespaces\ListRepoSecrets\Response\Applicationjson\H200> : ($call is Operation\Codespaces\GetRepoPublicKey::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CodespacesPublicKey> : ($call is Operation\Codespaces\GetRepoSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\RepoCodespacesSecret> : ($call is Operation\Codespaces\CreateOrUpdateRepoSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\EmptyObject> : ($call is Operation\Codespaces\DeleteRepoSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\ListCollaborators::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Collaborator> : ($call is Operation\Repos\CheckCollaborator::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\AddCollaborator::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\RepositoryInvitation> : ($call is Operation\Repos\RemoveCollaborator::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\GetCollaboratorPermissionLevel::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\RepositoryCollaboratorPermission> : ($call is Operation\Repos\ListCommitCommentsForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CommitComment> : ($call is Operation\Repos\GetCommitComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CommitComment> : ($call is Operation\Repos\DeleteCommitComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\UpdateCommitComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CommitComment> : ($call is Operation\Reactions\ListForCommitComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Reaction> : ($call is Operation\Reactions\CreateForCommitComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Reaction> : ($call is Operation\Reactions\DeleteForCommitComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\ListCommits::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Commit> : ($call is Operation\Repos\ListBranchesForHeadCommit::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\BranchShort> : ($call is Operation\Repos\ListCommentsForCommit::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CommitComment> : ($call is Operation\Repos\CreateCommitComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CommitComment> : ($call is Operation\Repos\ListPullRequestsAssociatedWithCommit::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PullRequestSimple> : ($call is Operation\Repos\GetCommit::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Commit> : ($call is Operation\Checks\ListForRef::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Checks\ListForSuite\Response\Applicationjson\H200> : ($call is Operation\Checks\ListSuitesForRef::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Checks\ListSuitesForRef\Response\Applicationjson\H200> : ($call is Operation\Repos\GetCombinedStatusForRef::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CombinedCommitStatus> : ($call is Operation\Repos\ListCommitStatusesForRef::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Status|Schema\BasicError> : ($call is Operation\Repos\GetCommunityProfileMetrics::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CommunityProfile> : ($call is Operation\Repos\CompareCommits::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CommitComparison> : ($call is Operation\Repos\GetContent::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ContentTree|Schema\Operation\Repos\GetContent\Response\Applicationjson\H200> : ($call is Operation\Repos\CreateOrUpdateFileContents::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\FileCommit> : ($call is Operation\Repos\DeleteFile::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\FileCommit> : ($call is Operation\Repos\ListContributors::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Contributor> : ($call is Operation\Dependabot\ListAlertsForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\DependabotAlert> : ($call is Operation\Dependabot\GetAlert::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\DependabotAlert> : ($call is Operation\Dependabot\UpdateAlert::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\DependabotAlert> : ($call is Operation\Dependabot\ListRepoSecrets::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Dependabot\ListRepoSecrets\Response\Applicationjson\H200> : ($call is Operation\Dependabot\GetRepoPublicKey::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\DependabotPublicKey> : ($call is Operation\Dependabot\GetRepoSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\DependabotSecret> : ($call is Operation\Dependabot\CreateOrUpdateRepoSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\EmptyObject> : ($call is Operation\Dependabot\DeleteRepoSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\DependencyGraph\DiffRange::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\DependencyGraphDiff> : ($call is Operation\DependencyGraph\CreateRepositorySnapshot::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\DependencyGraph\CreateRepositorySnapshot\Response\Applicationjson\H201> : ($call is Operation\Repos\ListDeployments::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Deployment> : ($call is Operation\Repos\CreateDeployment::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Deployment|Schema\Operation\Activity\MarkNotificationsAsRead\Response\Applicationjson\H202> : ($call is Operation\Repos\GetDeployment::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Deployment> : ($call is Operation\Repos\DeleteDeployment::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\ListDeploymentStatuses::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\DeploymentStatus> : ($call is Operation\Repos\CreateDeploymentStatus::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\DeploymentStatus> : ($call is Operation\Repos\GetDeploymentStatus::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\DeploymentStatus> : ($call is Operation\Repos\CreateDispatchEvent::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\GetAllEnvironments::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Repos\GetAllEnvironments\Response\Applicationjson\H200> : ($call is Operation\Repos\GetEnvironment::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Environment> : ($call is Operation\Repos\CreateOrUpdateEnvironment::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Environment> : ($call is Operation\Repos\DeleteAnEnvironment::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\ListDeploymentBranchPolicies::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Repos\ListDeploymentBranchPolicies\Response\Applicationjson\H200> : ($call is Operation\Repos\CreateDeploymentBranchPolicy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\DeploymentBranchPolicy> : ($call is Operation\Repos\GetDeploymentBranchPolicy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\DeploymentBranchPolicy> : ($call is Operation\Repos\UpdateDeploymentBranchPolicy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\DeploymentBranchPolicy> : ($call is Operation\Repos\DeleteDeploymentBranchPolicy::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Activity\ListRepoEvents::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Event> : ($call is Operation\Repos\ListForks::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\MinimalRepository> : ($call is Operation\Repos\CreateFork::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\FullRepository> : ($call is Operation\Git\CreateBlob::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ShortBlob> : ($call is Operation\Git\GetBlob::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Blob> : ($call is Operation\Git\CreateCommit::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\GitCommit> : ($call is Operation\Git\GetCommit::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\GitCommit> : ($call is Operation\Git\ListMatchingRefs::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\GitRef> : ($call is Operation\Git\GetRef::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\GitRef> : ($call is Operation\Git\CreateRef::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\GitRef> : ($call is Operation\Git\DeleteRef::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Git\UpdateRef::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\GitRef> : ($call is Operation\Git\CreateTag::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\GitTag> : ($call is Operation\Git\GetTag::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\GitTag> : ($call is Operation\Git\CreateTree::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\GitTree> : ($call is Operation\Git\GetTree::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\GitTree> : ($call is Operation\Repos\ListWebhooks::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Hook> : ($call is Operation\Repos\CreateWebhook::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Hook> : ($call is Operation\Repos\GetWebhook::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Hook> : ($call is Operation\Repos\DeleteWebhook::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\UpdateWebhook::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Hook> : ($call is Operation\Repos\GetWebhookConfigForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WebhookConfig> : ($call is Operation\Repos\UpdateWebhookConfigForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WebhookConfig> : ($call is Operation\Repos\ListWebhookDeliveries::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\HookDeliveryItem> : ($call is Operation\Repos\GetWebhookDelivery::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\HookDelivery> : ($call is Operation\Repos\RedeliverWebhookDelivery::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WebhookDeploymentCreated\Deployment\Payload> : ($call is Operation\Repos\PingWebhook::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\TestPushWebhook::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Migrations\GetImportStatus::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Import> : ($call is Operation\Migrations\StartImport::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Import> : ($call is Operation\Migrations\CancelImport::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Migrations\UpdateImport::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Import> : ($call is Operation\Migrations\GetCommitAuthors::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PorterAuthor> : ($call is Operation\Migrations\MapCommitAuthor::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PorterAuthor> : ($call is Operation\Migrations\GetLargeFiles::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PorterLargeFile> : ($call is Operation\Migrations\SetLfsPreference::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Import> : ($call is Operation\Apps\GetRepoInstallation::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Installation|Schema\BasicError> : ($call is Operation\Interactions\GetRestrictionsForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Interactions\GetRestrictionsForOrg\Response\Applicationjson\H200> : ($call is Operation\Interactions\SetRestrictionsForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\InteractionLimitResponse> : ($call is Operation\Interactions\RemoveRestrictionsForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\ListInvitations::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\RepositoryInvitation> : ($call is Operation\Repos\DeleteInvitation::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\UpdateInvitation::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\RepositoryInvitation> : ($call is Operation\Issues\ListForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Issue|Schema\BasicError> : ($call is Operation\Issues\Create::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Issue> : ($call is Operation\Issues\ListCommentsForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\IssueComment> : ($call is Operation\Issues\GetComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\IssueComment> : ($call is Operation\Issues\DeleteComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Issues\UpdateComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\IssueComment> : ($call is Operation\Reactions\ListForIssueComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Reaction> : ($call is Operation\Reactions\CreateForIssueComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Reaction> : ($call is Operation\Reactions\DeleteForIssueComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Issues\ListEventsForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\IssueEvent> : ($call is Operation\Issues\GetEvent::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\IssueEvent> : ($call is Operation\Issues\Get::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Issue|Schema\BasicError> : ($call is Operation\Issues\Update::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Issue|Schema\BasicError> : ($call is Operation\Issues\AddAssignees::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Issue> : ($call is Operation\Issues\RemoveAssignees::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Issue> : ($call is Operation\Issues\CheckUserCanBeAssignedToIssue::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Issues\ListComments::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\IssueComment> : ($call is Operation\Issues\CreateComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\IssueComment> : ($call is Operation\Issues\ListEvents::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\IssueEventForIssue> : ($call is Operation\Issues\ListLabelsOnIssue::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Label|Schema\BasicError> : ($call is Operation\Issues\SetLabels::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Label|Schema\BasicError> : ($call is Operation\Issues\AddLabels::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Label|Schema\BasicError> : ($call is Operation\Issues\RemoveAllLabels::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\BasicError> : ($call is Operation\Issues\RemoveLabel::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Label|Schema\BasicError> : ($call is Operation\Issues\Lock::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Issues\Unlock::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Reactions\ListForIssue::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Reaction> : ($call is Operation\Reactions\CreateForIssue::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Reaction> : ($call is Operation\Reactions\DeleteForIssue::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Issues\ListEventsForTimeline::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TimelineIssueEvents> : ($call is Operation\Repos\ListDeployKeys::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\DeployKey> : ($call is Operation\Repos\CreateDeployKey::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\DeployKey> : ($call is Operation\Repos\GetDeployKey::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\DeployKey> : ($call is Operation\Repos\DeleteDeployKey::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Issues\ListLabelsForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Label> : ($call is Operation\Issues\CreateLabel::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Label> : ($call is Operation\Issues\GetLabel::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Label> : ($call is Operation\Issues\DeleteLabel::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Issues\UpdateLabel::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Label> : ($call is Operation\Repos\ListLanguages::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Language> : ($call is Operation\Repos\EnableLfsForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WebhookDeploymentCreated\Deployment\Payload> : ($call is Operation\Repos\DisableLfsForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Licenses\GetForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\LicenseContent> : ($call is Operation\Repos\MergeUpstream::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\MergedUpstream> : ($call is Operation\Repos\Merge::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Commit> : ($call is Operation\Issues\ListMilestones::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Milestone> : ($call is Operation\Issues\CreateMilestone::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Milestone> : ($call is Operation\Issues\GetMilestone::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Milestone> : ($call is Operation\Issues\DeleteMilestone::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Issues\UpdateMilestone::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Milestone> : ($call is Operation\Issues\ListLabelsForMilestone::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Label> : ($call is Operation\Activity\ListRepoNotificationsForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Thread> : ($call is Operation\Activity\MarkRepoNotificationsAsRead::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Activity\MarkRepoNotificationsAsRead\Response\Applicationjson\H202> : ($call is Operation\Repos\GetPages::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Page> : ($call is Operation\Repos\UpdateInformationAboutPagesSite::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\CreatePagesSite::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Page> : ($call is Operation\Repos\DeletePagesSite::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\ListPagesBuilds::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PageBuild> : ($call is Operation\Repos\RequestPagesBuild::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PageBuildStatus> : ($call is Operation\Repos\GetLatestPagesBuild::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PageBuild> : ($call is Operation\Repos\GetPagesBuild::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PageBuild> : ($call is Operation\Repos\CreatePagesDeployment::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PageDeployment> : ($call is Operation\Repos\GetPagesHealthCheck::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PagesHealthCheck|Schema\EmptyObject> : ($call is Operation\Projects\ListForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Project> : ($call is Operation\Projects\CreateForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Project> : ($call is Operation\Pulls\List_::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PullRequestSimple> : ($call is Operation\Pulls\Create::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PullRequest> : ($call is Operation\Pulls\ListReviewCommentsForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PullRequestReviewComment> : ($call is Operation\Pulls\GetReviewComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PullRequestReviewComment> : ($call is Operation\Pulls\DeleteReviewComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Pulls\UpdateReviewComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PullRequestReviewComment> : ($call is Operation\Reactions\ListForPullRequestReviewComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Reaction> : ($call is Operation\Reactions\CreateForPullRequestReviewComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Reaction> : ($call is Operation\Reactions\DeleteForPullRequestComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Pulls\Get::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PullRequest> : ($call is Operation\Pulls\Update::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PullRequest> : ($call is Operation\Codespaces\CreateWithPrForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Codespace> : ($call is Operation\Pulls\ListReviewComments::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PullRequestReviewComment> : ($call is Operation\Pulls\CreateReviewComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PullRequestReviewComment> : ($call is Operation\Pulls\CreateReplyForReviewComment::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PullRequestReviewComment> : ($call is Operation\Pulls\ListCommits::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Commit> : ($call is Operation\Pulls\ListFiles::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\DiffEntry> : ($call is Operation\Pulls\CheckIfMerged::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Pulls\Merge::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PullRequestMergeResult> : ($call is Operation\Pulls\ListRequestedReviewers::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PullRequestReviewRequest> : ($call is Operation\Pulls\RequestReviewers::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PullRequestSimple> : ($call is Operation\Pulls\RemoveRequestedReviewers::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PullRequestSimple> : ($call is Operation\Pulls\ListReviews::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PullRequestReview> : ($call is Operation\Pulls\CreateReview::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PullRequestReview> : ($call is Operation\Pulls\GetReview::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PullRequestReview> : ($call is Operation\Pulls\UpdateReview::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PullRequestReview> : ($call is Operation\Pulls\DeletePendingReview::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PullRequestReview> : ($call is Operation\Pulls\ListCommentsForReview::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ReviewComment> : ($call is Operation\Pulls\DismissReview::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PullRequestReview> : ($call is Operation\Pulls\SubmitReview::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PullRequestReview> : ($call is Operation\Pulls\UpdateBranch::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Activity\MarkRepoNotificationsAsRead\Response\Applicationjson\H202> : ($call is Operation\Repos\GetReadme::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ContentFile> : ($call is Operation\Repos\GetReadmeInDirectory::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ContentFile> : ($call is Operation\Repos\ListReleases::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Release> : ($call is Operation\Repos\CreateRelease::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Release> : ($call is Operation\Repos\GetReleaseAsset::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ReleaseAsset> : ($call is Operation\Repos\DeleteReleaseAsset::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\UpdateReleaseAsset::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ReleaseAsset> : ($call is Operation\Repos\GenerateReleaseNotes::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ReleaseNotesContent> : ($call is Operation\Repos\GetLatestRelease::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Release> : ($call is Operation\Repos\GetReleaseByTag::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Release> : ($call is Operation\Repos\GetRelease::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Release> : ($call is Operation\Repos\DeleteRelease::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\UpdateRelease::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Release> : ($call is Operation\Repos\ListReleaseAssets::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ReleaseAsset> : ($call is Operation\Repos\UploadReleaseAsset::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ReleaseAsset> : ($call is Operation\Reactions\ListForRelease::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Reaction> : ($call is Operation\Reactions\CreateForRelease::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Reaction> : ($call is Operation\Reactions\DeleteForRelease::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\SecretScanning\ListAlertsForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SecretScanningAlert> : ($call is Operation\SecretScanning\GetAlert::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SecretScanningAlert> : ($call is Operation\SecretScanning\UpdateAlert::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SecretScanningAlert> : ($call is Operation\SecretScanning\ListLocationsForAlert::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SecretScanningLocation> : ($call is Operation\Activity\ListStargazersForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Activity\ListStargazersForRepo\Response\Applicationjson\H200> : ($call is Operation\Repos\GetCodeFrequencyStats::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Repos\GetCodeFrequencyStats\Response\Applicationjson\H200|Schema\WebhookDeploymentCreated\Deployment\Payload> : ($call is Operation\Repos\GetCommitActivityStats::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CommitActivity|Schema\WebhookDeploymentCreated\Deployment\Payload> : ($call is Operation\Repos\GetContributorsStats::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ContributorActivity|Schema\WebhookDeploymentCreated\Deployment\Payload> : ($call is Operation\Repos\GetParticipationStats::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ParticipationStats> : ($call is Operation\Repos\GetPunchCardStats::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Repos\GetCodeFrequencyStats\Response\Applicationjson\H200> : ($call is Operation\Repos\CreateCommitStatus::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Status> : ($call is Operation\Activity\ListWatchersForRepo::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SimpleUser> : ($call is Operation\Activity\GetRepoSubscription::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\RepositorySubscription> : ($call is Operation\Activity\SetRepoSubscription::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\RepositorySubscription> : ($call is Operation\Activity\DeleteRepoSubscription::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\ListTags::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Tag> : ($call is Operation\Repos\ListTagProtection::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TagProtection> : ($call is Operation\Repos\CreateTagProtection::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TagProtection> : ($call is Operation\Repos\DeleteTagProtection::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\DownloadTarballArchive::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\DownloadTarballArchiveStreaming::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Rx\Observable<string>|\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\ListTeams::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Team> : ($call is Operation\Repos\GetAllTopics::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Topic> : ($call is Operation\Repos\ReplaceAllTopics::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Topic> : ($call is Operation\Repos\GetClones::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CloneTraffic> : ($call is Operation\Repos\GetTopPaths::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ContentTraffic> : ($call is Operation\Repos\GetTopReferrers::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ReferrerTraffic> : ($call is Operation\Repos\GetViews::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ViewTraffic> : ($call is Operation\Repos\Transfer::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\MinimalRepository> : ($call is Operation\Repos\CheckVulnerabilityAlerts::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\EnableVulnerabilityAlerts::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\DisableVulnerabilityAlerts::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\DownloadZipballArchive::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\DownloadZipballArchiveStreaming::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Rx\Observable<string>|\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\CreateUsingTemplate::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Repository> : ($call is Operation\Repos\ListPublic::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\MinimalRepository> : ($call is Operation\Actions\ListEnvironmentSecrets::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListRepoOrganizationSecrets\Response\Applicationjson\H200> : ($call is Operation\Actions\GetEnvironmentPublicKey::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ActionsPublicKey> : ($call is Operation\Actions\GetEnvironmentSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ActionsSecret> : ($call is Operation\Actions\CreateOrUpdateEnvironmentSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\EmptyObject> : ($call is Operation\Actions\DeleteEnvironmentSecret::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\ListEnvironmentVariables::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListRepoOrganizationVariables\Response\Applicationjson\H200> : ($call is Operation\Actions\CreateEnvironmentVariable::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\EmptyObject> : ($call is Operation\Actions\GetEnvironmentVariable::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ActionsVariable> : ($call is Operation\Actions\DeleteEnvironmentVariable::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Actions\UpdateEnvironmentVariable::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Search\Code::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Search\Code\Response\Applicationjson\H200> : ($call is Operation\Search\Commits::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Search\Commits\Response\Applicationjson\H200> : ($call is Operation\Search\IssuesAndPullRequests::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Search\IssuesAndPullRequests\Response\Applicationjson\H200> : ($call is Operation\Search\Labels::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Search\Labels\Response\Applicationjson\H200> : ($call is Operation\Search\Repos::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Search\Repos\Response\Applicationjson\H200> : ($call is Operation\Search\Topics::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Search\Topics\Response\Applicationjson\H200> : ($call is Operation\Search\Users::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Search\Users\Response\Applicationjson\H200> : ($call is Operation\Teams\GetLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamFull> : ($call is Operation\Teams\DeleteLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Teams\UpdateLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamFull> : ($call is Operation\Teams\ListDiscussionsLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamDiscussion> : ($call is Operation\Teams\CreateDiscussionLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamDiscussion> : ($call is Operation\Teams\GetDiscussionLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamDiscussion> : ($call is Operation\Teams\DeleteDiscussionLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Teams\UpdateDiscussionLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamDiscussion> : ($call is Operation\Teams\ListDiscussionCommentsLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamDiscussionComment> : ($call is Operation\Teams\CreateDiscussionCommentLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamDiscussionComment> : ($call is Operation\Teams\GetDiscussionCommentLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamDiscussionComment> : ($call is Operation\Teams\DeleteDiscussionCommentLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Teams\UpdateDiscussionCommentLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamDiscussionComment> : ($call is Operation\Reactions\ListForTeamDiscussionCommentLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Reaction> : ($call is Operation\Reactions\CreateForTeamDiscussionCommentLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Reaction> : ($call is Operation\Reactions\ListForTeamDiscussionLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Reaction> : ($call is Operation\Reactions\CreateForTeamDiscussionLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Reaction> : ($call is Operation\Teams\ListPendingInvitationsLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrganizationInvitation> : ($call is Operation\Teams\ListMembersLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SimpleUser> : ($call is Operation\Teams\GetMemberLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Teams\AddMemberLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Teams\RemoveMemberLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Teams\GetMembershipForUserLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamMembership> : ($call is Operation\Teams\AddOrUpdateMembershipForUserLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamMembership> : ($call is Operation\Teams\RemoveMembershipForUserLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Teams\ListProjectsLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamProject> : ($call is Operation\Teams\CheckPermissionsForProjectLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamProject> : ($call is Operation\Teams\AddOrUpdateProjectPermissionsLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Teams\RemoveProjectLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Teams\ListReposLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\MinimalRepository> : ($call is Operation\Teams\CheckPermissionsForRepoLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamRepository> : ($call is Operation\Teams\AddOrUpdateRepoPermissionsLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Teams\RemoveRepoLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Teams\ListChildLegacy::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Team> : ($call is Operation\Users\GetAuthenticated::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Users\GetAuthenticated\Response\Applicationjson\H200> : ($call is Operation\Users\UpdateAuthenticated::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PrivateUser> : ($call is Operation\Users\ListBlockedByAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SimpleUser> : ($call is Operation\Users\CheckBlocked::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Users\Block::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Users\Unblock::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Codespaces\ListForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Codespaces\ListInOrganization\Response\Applicationjson\H200> : ($call is Operation\Codespaces\CreateForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Codespace> : ($call is Operation\Codespaces\ListSecretsForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Codespaces\ListSecretsForAuthenticatedUser\Response\Applicationjson\H200> : ($call is Operation\Codespaces\GetPublicKeyForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CodespacesUserPublicKey> : ($call is Operation\Codespaces\GetSecretForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CodespacesSecret> : ($call is Operation\Codespaces\CreateOrUpdateSecretForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\EmptyObject> : ($call is Operation\Codespaces\DeleteSecretForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Codespaces\ListRepositoriesForSecretForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Actions\ListSelectedReposForOrgSecret\Response\Applicationjson\H200> : ($call is Operation\Codespaces\SetRepositoriesForSecretForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Codespaces\AddRepositoryForSecretForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Codespaces\RemoveRepositoryForSecretForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Codespaces\GetForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Codespace> : ($call is Operation\Codespaces\DeleteForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\WebhookDeploymentCreated\Deployment\Payload> : ($call is Operation\Codespaces\UpdateForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Codespace> : ($call is Operation\Codespaces\ExportForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CodespaceExportDetails> : ($call is Operation\Codespaces\GetExportDetailsForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CodespaceExportDetails> : ($call is Operation\Codespaces\CodespaceMachinesForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Codespaces\RepoMachinesForAuthenticatedUser\Response\Applicationjson\H200> : ($call is Operation\Codespaces\PublishForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CodespaceWithFullRepository> : ($call is Operation\Codespaces\StartForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Codespace> : ($call is Operation\Codespaces\StopForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Codespace> : ($call is Operation\Packages\ListDockerMigrationConflictingPackagesForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Package> : ($call is Operation\Users\SetPrimaryEmailVisibilityForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Email> : ($call is Operation\Users\ListEmailsForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Email> : ($call is Operation\Users\AddEmailForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Email> : ($call is Operation\Users\DeleteEmailForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Users\ListFollowersForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SimpleUser> : ($call is Operation\Users\ListFollowedByAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SimpleUser> : ($call is Operation\Users\CheckPersonIsFollowedByAuthenticated::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Users\Follow::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Users\Unfollow::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Users\ListGpgKeysForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\GpgKey> : ($call is Operation\Users\CreateGpgKeyForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\GpgKey> : ($call is Operation\Users\GetGpgKeyForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\GpgKey> : ($call is Operation\Users\DeleteGpgKeyForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Apps\ListInstallationsForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Orgs\ListAppInstallations\Response\Applicationjson\H200> : ($call is Operation\Apps\ListInstallationReposForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Apps\ListInstallationReposForAuthenticatedUser\Response\Applicationjson\H200> : ($call is Operation\Apps\AddRepoToInstallationForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Apps\RemoveRepoFromInstallationForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Interactions\GetRestrictionsForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Interactions\GetRestrictionsForOrg\Response\Applicationjson\H200> : ($call is Operation\Interactions\SetRestrictionsForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\InteractionLimitResponse> : ($call is Operation\Interactions\RemoveRestrictionsForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Issues\ListForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Issue> : ($call is Operation\Users\ListPublicSshKeysForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Key> : ($call is Operation\Users\CreatePublicSshKeyForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Key> : ($call is Operation\Users\GetPublicSshKeyForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Key> : ($call is Operation\Users\DeletePublicSshKeyForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Apps\ListSubscriptionsForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\UserMarketplacePurchase> : ($call is Operation\Apps\ListSubscriptionsForAuthenticatedUserStubbed::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\UserMarketplacePurchase> : ($call is Operation\Orgs\ListMembershipsForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrgMembership> : ($call is Operation\Orgs\GetMembershipForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrgMembership> : ($call is Operation\Orgs\UpdateMembershipForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrgMembership> : ($call is Operation\Migrations\ListForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Migration> : ($call is Operation\Migrations\StartForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Migration> : ($call is Operation\Migrations\GetStatusForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Migration> : ($call is Operation\Migrations\GetArchiveForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Migrations\DeleteArchiveForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Migrations\UnlockRepoForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Migrations\ListReposForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\MinimalRepository> : ($call is Operation\Orgs\ListForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrganizationSimple> : ($call is Operation\Packages\ListPackagesForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Package> : ($call is Operation\Packages\GetPackageForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Package> : ($call is Operation\Packages\DeletePackageForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Packages\RestorePackageForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Packages\GetAllPackageVersionsForPackageOwnedByAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PackageVersion> : ($call is Operation\Packages\GetPackageVersionForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PackageVersion> : ($call is Operation\Packages\DeletePackageVersionForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Packages\RestorePackageVersionForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Projects\CreateForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Project> : ($call is Operation\Users\ListPublicEmailsForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Email> : ($call is Operation\Repos\ListForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Repository> : ($call is Operation\Repos\CreateForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Repository> : ($call is Operation\Repos\ListInvitationsForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\RepositoryInvitation> : ($call is Operation\Repos\DeclineInvitationForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Repos\AcceptInvitationForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Users\ListSocialAccountsForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SocialAccount> : ($call is Operation\Users\AddSocialAccountForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SocialAccount> : ($call is Operation\Users\DeleteSocialAccountForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Users\ListSshSigningKeysForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SshSigningKey> : ($call is Operation\Users\CreateSshSigningKeyForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SshSigningKey> : ($call is Operation\Users\GetSshSigningKeyForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SshSigningKey> : ($call is Operation\Users\DeleteSshSigningKeyForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Activity\ListReposStarredByAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Repository|Schema\StarredRepository> : ($call is Operation\Activity\CheckRepoIsStarredByAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Activity\StarRepoForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Activity\UnstarRepoForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Activity\ListWatchedReposForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\MinimalRepository> : ($call is Operation\Teams\ListForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\TeamFull> : ($call is Operation\Users\List_::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SimpleUser> : ($call is Operation\Users\GetByUsername::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Users\GetAuthenticated\Response\Applicationjson\H200> : ($call is Operation\Packages\ListDockerMigrationConflictingPackagesForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Package> : ($call is Operation\Activity\ListEventsForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Event> : ($call is Operation\Activity\ListOrgEventsForAuthenticatedUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Event> : ($call is Operation\Activity\ListPublicEventsForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Event> : ($call is Operation\Users\ListFollowersForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SimpleUser> : ($call is Operation\Users\ListFollowingForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SimpleUser> : ($call is Operation\Users\CheckFollowingForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Gists\ListForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\BaseGist> : ($call is Operation\Users\ListGpgKeysForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\GpgKey> : ($call is Operation\Users\GetContextForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Hovercard> : ($call is Operation\Apps\GetUserInstallation::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Installation> : ($call is Operation\Users\ListPublicKeysForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\KeySimple> : ($call is Operation\Orgs\ListForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\OrganizationSimple> : ($call is Operation\Packages\ListPackagesForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Package> : ($call is Operation\Packages\GetPackageForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Package> : ($call is Operation\Packages\DeletePackageForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Packages\RestorePackageForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Packages\GetAllPackageVersionsForPackageOwnedByUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PackageVersion> : ($call is Operation\Packages\GetPackageVersionForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PackageVersion> : ($call is Operation\Packages\DeletePackageVersionForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Packages\RestorePackageVersionForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<\Psr\Http\Message\ResponseInterface> : ($call is Operation\Projects\ListForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Project> : ($call is Operation\Activity\ListReceivedEventsForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Event> : ($call is Operation\Activity\ListReceivedPublicEventsForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Event> : ($call is Operation\Repos\ListForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\MinimalRepository> : ($call is Operation\Billing\GetGithubActionsBillingUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\ActionsBillingUsage> : ($call is Operation\Billing\GetGithubPackagesBillingUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\PackagesBillingUsage> : ($call is Operation\Billing\GetSharedStorageBillingUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\CombinedBillingUsage> : ($call is Operation\Users\ListSocialAccountsForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SocialAccount> : ($call is Operation\Users\ListSshSigningKeysForUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\SshSigningKey> : ($call is Operation\Activity\ListReposStarredByUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Activity\ListReposStarredByUser\Response\Applicationjson\H200> : ($call is Operation\Activity\ListReposWatchedByUser::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\MinimalRepository> : ($call is Operation\Meta\GetAllVersions::OPERATION_MATCH ? \React\Promise\PromiseInterface<Schema\Operation\Meta\GetAllVersions\Response\Applicationjson\H200> : \React\Promise\PromiseInterface<Schema\WebHookHeader\UserAgent
     */
    public function callAsync(string $call, array $params = array());
    public function webHooks() : \ApiClients\Contracts\OpenAPI\WebHooksInterface;
}
