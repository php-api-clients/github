<?php

namespace ApiClients\Client\Github\OpenAPI\WebHooks;

final class WebHooks
{
    public const EVENT_CLASS_MAPPING = array('check_run' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\CheckRun', 'check_suite' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\CheckSuite', 'code_scanning_alert' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\CodeScanningAlert', 'commit_comment' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\CommitComment', 'content_reference' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\ContentReference', 'create' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Create', 'delete' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Delete', 'deploy_key' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\DeployKey', 'deployment' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Deployment', 'deployment_status' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\DeploymentStatus', 'discussion' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Discussion', 'discussion_comment' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\DiscussionComment', 'fork' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Fork', 'github_app_authorization' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\GithubAppAuthorization', 'gollum' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Gollum', 'installation' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Installation', 'installation_repositories' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\InstallationRepositories', 'issue_comment' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\IssueComment', 'issues' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Issues', 'label' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Label', 'marketplace_purchase' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\MarketplacePurchase', 'member' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Member', 'membership' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Membership', 'meta' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Meta', 'milestone' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Milestone', 'org_block' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\OrgBlock', 'organization' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Organization', 'package' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Package', 'page_build' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\PageBuild', 'ping' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Ping', 'project' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Project', 'project_card' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\ProjectCard', 'project_column' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\ProjectColumn', 'public' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Public', 'pull_request' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\PullRequest', 'pull_request_review' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\PullRequestReview', 'pull_request_review_comment' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\PullRequestReviewComment', 'push' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Push', 'release' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Release', 'repository' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Repository', 'repository_dispatch' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\RepositoryDispatch', 'repository_import' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\RepositoryImport', 'repository_vulnerability_alert' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\RepositoryVulnerabilityAlert', 'secret_scanning_alert' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\SecretScanningAlert', 'security_advisory' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\SecurityAdvisory', 'sponsorship' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Sponsorship', 'star' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Star', 'status' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Status', 'team' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Team', 'team_add' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\TeamAdd', 'watch' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\Watch', 'workflow_dispatch' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\WorkflowDispatch', 'workflow_run' => 'ApiClients\\Client\\Github\\OpenAPI\\WebHooks\\WebHook\\WorkflowRun');
    public static function resolve(string $event) : \ApiClients\Client\Github\OpenAPI\WebHooks\WebHookInterface
    {
        if (!array_key_exists($event, self::EVENT_CLASS_MAPPING)) {
            throw new \InvalidArgumentException();
        }
        $class = self::EVENT_CLASS_MAPPING[$event];
        return new $class();
    }
}
